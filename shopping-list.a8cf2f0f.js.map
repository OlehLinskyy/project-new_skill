{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/header/header.js","node_modules/@parcel/runtime-js/lib/runtime-44e7bd74d9a8b620.js","node_modules/lodash.debounce/index.js","src/js/loader/loader.js","src/js/sing-up/sing-up.js","src/js/support-ukraine/support-ukraine.js","src/js/support-ukraine/funds-array.js","node_modules/@parcel/runtime-js/lib/runtime-249c4c32ec8296b8.js","node_modules/@parcel/runtime-js/lib/runtime-91202a307d9d30e5.js","node_modules/@parcel/runtime-js/lib/runtime-48267b77bcd6c305.js","node_modules/@parcel/runtime-js/lib/runtime-f9bda8c276ff9ddc.js","node_modules/@parcel/runtime-js/lib/runtime-26965ebf4901867d.js","node_modules/@parcel/runtime-js/lib/runtime-72bc3d74b7d8806b.js","node_modules/@parcel/runtime-js/lib/runtime-932b1e12ef336667.js","node_modules/@parcel/runtime-js/lib/runtime-309c60b29fad25f7.js","node_modules/@parcel/runtime-js/lib/runtime-cc07b9ff8927fb77.js","node_modules/@parcel/runtime-js/lib/runtime-d1cbc7e72b85bc88.js","node_modules/@parcel/runtime-js/lib/runtime-55d8dcad40a12511.js","node_modules/@parcel/runtime-js/lib/runtime-75b6e2203ad6bfc8.js","node_modules/@parcel/runtime-js/lib/runtime-01fb7bbc77e03bbd.js","node_modules/@parcel/runtime-js/lib/runtime-7d635791629971e4.js","node_modules/@parcel/runtime-js/lib/runtime-38d5acfb7e96cbef.js","node_modules/@parcel/runtime-js/lib/runtime-7c05e7641c30c38e.js","node_modules/@parcel/runtime-js/lib/runtime-e184cc0eb29cc6b2.js","node_modules/@parcel/runtime-js/lib/runtime-523aad1064a15419.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","node_modules/@parcel/runtime-js/lib/runtime-38b78ae4be815205.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import openCloseIcon from '../../images/icons.svg';\nimport styles from '../../sass/utils/_variables.scss';\nimport debounce from 'lodash.debounce';\n\n//   Перемикач світла/темна тема\nexport const body = document.body;\nconst header = document.querySelector('.page-nav');\nconst iconMobileMenu = document.querySelector('.menu-toggle');\nconst darkModeLocalStored = localStorage.getItem('darkMode');\nlet slider = document.querySelector('.switch');\n\nslider.addEventListener('change', changeDarkMode);\n// window.addEventListener('storage', syncChangeDarkMode);\n\nif (darkModeLocalStored === 'true') {\n  slider.checked = true;\n  // slider.setAttribute('checked', '');\n  setDarkModeStyle();\n}\n\nfunction changeDarkMode() {\n  const darkModeId = 'darkMode';\n\n  // if (slider.checked) {\n  if (slider.checked) {\n    setDarkModeStyle();\n    localStorage.setItem(darkModeId, 'true');\n  } else {\n    setLightModeStyle();\n    localStorage.setItem(darkModeId, 'false');\n  }\n}\n\n// function syncChangeDarkMode(e) {\n//   console.log(e);\n\n//   console.log(slider.checked.value);\n//   // console.log();\n//   // console.log();\n// }\n\nfunction setLightModeStyle() {\n  body.classList.remove('dark-mode');\n  header.classList.remove('dark-mode');\n  iconMobileMenu.classList.remove('dark-mode');\n  // sliderBall.classList.remove('dark-mode');\n}\n\nfunction setDarkModeStyle() {\n  body.classList.add('dark-mode');\n  header.classList.add('dark-mode');\n  iconMobileMenu.classList.add('dark-mode');\n  // sliderBall.classList.add('dark-mode');\n}\n\n\n// Відкриття/Закриття модалки для моб.версії\n\nconst modalBoxEl = document.querySelector('.data-modal');\nconst openModalBtnEl = document.querySelector('.js-open-menu');\nconst openModalBtnSvgEl = document.querySelector('.icon-burger');\nconst signUpBtnMobile = document.querySelector('.sign-up-btn-js');\nconst iconHrefEl = document.querySelector('.icon-href');\n\nopenModalBtnEl.addEventListener('click', toggleModal);\nsignUpBtnMobile.addEventListener('click', toggleModal);\n\nfunction toggleModal() {\n  if (modalBoxEl.classList.contains('is-hidden')) {\n    modalBoxEl.classList.remove('is-hidden');\n    // body.classList.remove('no-scroll-body-js');\n    iconHrefEl.setAttribute('href', `${openCloseIcon}#icon-cross`);\n    document.body.classList.add('modal-open');\n    openModalBtnSvgEl.style.width = '18px';\n    openModalBtnSvgEl.style.height = '18px';\n    return;\n  } else {\n    modalBoxEl.classList.add('is-hidden');\n    // body.classList.add('no-scroll-body-js');\n    iconHrefEl.setAttribute('href', `${openCloseIcon}#icon-menu`);\n    document.body.classList.remove('modal-open');\n    openModalBtnSvgEl.style.width = '24px';\n    openModalBtnSvgEl.style.height = '24px';\n  }\n}\n\n// Унеможливлення скролу мобільного меню\n\n\n\n// Виділення жовтим назву поточної сторінки (меню в хедері)\n\nconst menuHomeEl = document.querySelector('.menu__home');\nconst menuShoppingEl = document.querySelector('.menu__shopping');\n\nconst setCurrentPage = () => {\n  const currentPageName = window.location.pathname;\n  // console.log(currentPageName);\n  // console.log(menuHomeEl);\n  // console.log(menuShoppingEl);\n\n  if (\n    currentPageName === '/index.html' ||\n    currentPageName === '/project-new_skill/index.html' ||\n    currentPageName === '/project-new_skill/'\n  ) {\n    menuHomeEl.classList.add('current-page');\n    menuShoppingEl.classList.remove('current-page');\n    return;\n  }\n\n  menuShoppingEl.classList.add('current-page');\n  menuHomeEl.classList.remove('current-page');\n};\n\nsetCurrentPage();\n\n// Виділення жовтим назву поточної сторінки (меню в модалці)\n\nconst dropMenuHomeEl = document.querySelector('.drop-menu__home');\nconst dropMenuShoppingEl = document.querySelector('.drop-menu__shopping');\n\nconst dropSetCurrentPage = () => {\n  const dropCurrentPageName = window.location.pathname;\n\n  if (\n    dropCurrentPageName === '/index.html' ||\n    dropCurrentPageName === '/project-new_skill/index.html'\n  ) {\n    dropMenuHomeEl.classList.add('current-page');\n    return;\n  }\n  dropMenuShoppingEl.classList.add('current-page');\n};\n\ndropSetCurrentPage();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8OQ7p\")).toString();","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","const [loaderOverlay] = document.getElementsByClassName('loader__overlay');\n\nconst removeLoader = () => {\n  setTimeout(() => {\n    loaderOverlay.classList.remove('on-loader');\n  }, 250);\n};\n\nconst addLoader = () => {\n  loaderOverlay.classList.add('on-loader');\n};\n\nexport { addLoader, removeLoader };\n","import { body } from '../header/header';\n\nconst refs = {\n  headerSignUp: document.querySelector('.auth__modal-open'),\n  headerSignUpMenu: document.querySelector('.sign-up-btn-js'),\n  signUp: document.querySelector('.sign-up'),\n};\n\nconst {\n  children: [singUpModal],\n} = refs.signUp;\n\nconst {\n  children: [buttonOfClose, signUpForm1, signUpForm2],\n} = singUpModal;\n\nconst signUpButton = singUpModal.children[3].children[0];\nconst signIpButton = singUpModal.children[3].children[1];\n\nconst closeModalSingUp = e => {\n  const buttonOfCloseSvg = buttonOfClose.children[0];\n  const buttonOfCloseUse = buttonOfClose.children[0].children[0];\n\n  if (\n    e.target.className === 'sign-up sign-up-hidden' ||\n    e.target.className === 'sign-up__cross' ||\n    e.target === buttonOfCloseSvg ||\n    e.target === buttonOfCloseUse\n  ) {\n    body.classList.remove('no-scroll-body-js');\n    refs.signUp.classList.remove('sign-up-hidden');\n  }\n};\n\nconst escapeCloseModalSingUp = e => {\n  if (e.code === 'Escape') {\n    body.classList.remove('no-scroll-body-js');\n    refs.signUp.classList.remove('sign-up-hidden');\n  }\n};\n\nconst openModalSingUp = () => {\n  body.classList.add('no-scroll-body-js');\n  refs.signUp.classList.add('sign-up-hidden');\n  refs.signUp.addEventListener('click', closeModalSingUp);\n  document.addEventListener('keydown', escapeCloseModalSingUp);\n};\n\nrefs.headerSignUp.addEventListener('click', openModalSingUp);\nrefs.headerSignUpMenu.addEventListener('click', openModalSingUp);\n\nconst checkForm1 = e => {\n  e.preventDefault();\n  const [name, email, password, buttonSignUp] = signUpForm1;\n  const signUp = {};\n  signUp.name = name.value;\n  signUp.email = email.value;\n  signUp.password = password.value;\n  localStorage.setItem('sign-up', JSON.stringify(signUp));\n  signUpForm1.reset();\n  buttonSignUp.disabled = true;\n  buttonSignUp.style.cursor = 'auto';\n};\n\nconst checkRequired1 = () => {\n  const [name, email, password, buttonSignUp] = signUpForm1;\n  if (\n    name.checkValidity() &&\n    email.checkValidity() &&\n    password.checkValidity()\n  ) {\n    buttonSignUp.disabled = false;\n    buttonSignUp.style.cursor = 'pointer';\n  } else {\n    buttonSignUp.disabled = true;\n    buttonSignUp.style.cursor = 'auto';\n  }\n};\n\nsignUpForm1.addEventListener('submit', checkForm1);\nsignUpForm1.addEventListener('input', checkRequired1);\n\nconst checkForm2 = e => {\n  e.preventDefault();\n  const [email, password, buttonSignUp] = signUpForm2;\n  const signIn = {};\n  signIn.email = email.value;\n  signIn.password = password.value;\n  localStorage.setItem('sign-in', JSON.stringify(signIn));\n  signUpForm2.reset();\n  buttonSignUp.disabled = true;\n  buttonSignUp.style.cursor = 'auto';\n};\n\nconst checkRequired2 = () => {\n  const [email, password, buttonSignUp] = signUpForm2;\n  if (email.checkValidity() && password.checkValidity()) {\n    buttonSignUp.disabled = false;\n    buttonSignUp.style.cursor = 'pointer';\n  } else {\n    buttonSignUp.disabled = true;\n    buttonSignUp.style.cursor = 'auto';\n  }\n};\n\nsignUpForm2.addEventListener('submit', checkForm2);\nsignUpForm2.addEventListener('input', checkRequired2);\n\nconst createMarkupSignIp = () => {\n  signIpButton.classList.add('sign-up-button-active');\n  signUpButton.classList.remove('sign-up-button-active');\n  signUpForm2.classList.remove('sign-up-hidden');\n  signUpForm1.classList.add('sign-up-hidden');\n};\n\ncreateMarkupSignIp();\n\nconst createMarkupSignUp = () => {\n  signUpButton.classList.add('sign-up-button-active');\n  signIpButton.classList.remove('sign-up-button-active');\n  signUpForm1.classList.remove('sign-up-hidden');\n  signUpForm2.classList.add('sign-up-hidden');\n};\n\nsignUpButton.addEventListener('click', createMarkupSignUp);\nsignIpButton.addEventListener('click', createMarkupSignIp);\n\ncreateMarkupSignUp();\n","import { fundArray } from './funds-array';\nimport Swiper from 'swiper';\n\nconst supportListEl = document.querySelector('.support__list');\nconst btnSwiperEl = document.querySelector('.swiper-button-next');\n\nconst renderSupportList = items => {\n  const listItems = items\n    .map((item, index) => {\n      const { title, url, img, img2 } = item;\n      const number = (index + 1).toString().padStart(2, '0');\n      return `\n           <li class=\"support__list-item swiper-slide\">\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer nofollow\"\n                aria-label=\"company icon\"\n                class=\"support__link\"\n                href=\"${url}\"\n              >\n                <img\n                  src=\"${img}\"\n                  alt=\"${title}\"\n                  class=\"support__logo\"\n                  srcset=\"${img} 1x, ${img2} 2x\" \n                  width=\"149\"\n                  loading=\"lazy\"\n                />\n              </a>\n              <span class=\"support__number\">${number}</span>\n            </li>\n              `;\n    })\n    .join('');\n  supportListEl.innerHTML = `${listItems}`;\n};\n\nrenderSupportList(fundArray);\n\nconst swiper = new Swiper('.swiper', {\n  direction: 'vertical',\n  spaceBetween: 19,\n  slidesPerView: 'auto',\n  rewind: true,\n  // loop: true,\n\n  navigation: {\n    nextEl: '.swiper-button-next',\n  },\n\n  plugins: {\n    scrollContainer: true,\n  },\n});\n\nswiper.update();\n\nbtnSwiperEl.addEventListener('click', () => {\n  swiper.slideNext();\n});\n\n// const imgSlides = document.querySelectorAll('.support__list-item');\n// const sliderBtn = document.querySelector('.support__btn');\n\n// let counter = 0;\n// let moveDown = false;\n\n// const verticalSlider = function () {\n//   imgSlides.forEach(function (slide) {\n//     slide.style.transform = `translateY(-${counter * 100}%)`;\n//   });\n// };\n\n// sliderBtn.addEventListener('click', function () {\n//   if (moveDown) {\n//     counter -= 3;\n//     if (counter < 0) {\n//       counter = 0;\n//       moveDown = false;\n//       sliderBtn.querySelector('.support__btn-icon').style.transform = '';\n//     }\n//   } else {\n//     counter += 3;\n//     if (counter >= imgSlides.length) {\n//       counter = imgSlides.length - 1;\n//       moveDown = true;\n//       sliderBtn.querySelector('.support__btn-icon').style.transform =\n//         'rotate(180deg)';\n//     }\n//   }\n//   verticalSlider(renderSupportList);\n// });\n","export const fundArray = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: require('../../images/png/support-ukraine/save-the-children.png'),\n    img2: require('../../images/png/support-ukraine/save-the-children@2x.png'),\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: require('../../images/png/support-ukraine/project-hope.png'),\n    img2: require('../../images/png/support-ukraine/project-hope@2x.png'),\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: require('../../images/png/support-ukraine/united24.png'),\n    img2: require('../../images/png/support-ukraine/united24@2x.png'),\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: require('../../images/png/support-ukraine/international-medical-corps.png'),\n    img2: require('../../images/png/support-ukraine/international-medical-corps@2x.png'),\n  },\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: require('../../images/png/support-ukraine/medecins-sans-frontieres.png'),\n    img2: require('../../images/png/support-ukraine/medecins-sans-frontieres@2x.png'),\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: require('../../images/png/support-ukraine/razom.png'),\n    img2: require('../../images/png/support-ukraine/razom@2x.png'),\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: require('../../images/png/support-ukraine/action-against-hunger.png'),\n    img2: require('../../images/png/support-ukraine/action-against-hunger@2x.png'),\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: require('../../images/png/support-ukraine/world-vision.png'),\n    img2: require('../../images/png/support-ukraine/world-vision@2x.png'),\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: require('../../images/png/support-ukraine/charity-foundation.png'),\n    img2: require('../../images/png/support-ukraine/charity-foundation@2x.png'),\n  },\n];\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"27G0e\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kinZx\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bIRqv\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gQXiN\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bSzbS\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gRCGB\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6U7Nc\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6DzLj\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3upBF\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"g0sdK\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"5TckD\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jBqVw\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3SSZo\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jYoAZ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kB6Ee\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3c2vT\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"l5HDN\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"10xiN\")).toString();","/**\n * Swiper 9.3.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: May 10, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    if (swiper.isElement) {\n      swiper.el.shadowEl.append(liveRegion);\n    } else {\n      swiper.el.append(liveRegion);\n    }\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"hyxT8\\\":\\\"shopping-list.a8cf2f0f.js\\\",\\\"8OQ7p\\\":\\\"icons.e51562f1.svg\\\",\\\"27G0e\\\":\\\"save-the-children.164cf59f.png\\\",\\\"kinZx\\\":\\\"save-the-children@2x.86c690d0.png\\\",\\\"bIRqv\\\":\\\"project-hope.ac2f4725.png\\\",\\\"gQXiN\\\":\\\"project-hope@2x.b2c00627.png\\\",\\\"bSzbS\\\":\\\"united24.eb8f4e7c.png\\\",\\\"gRCGB\\\":\\\"united24@2x.47d4c2fe.png\\\",\\\"6U7Nc\\\":\\\"international-medical-corps.f83b1230.png\\\",\\\"6DzLj\\\":\\\"international-medical-corps@2x.02af5df3.png\\\",\\\"3upBF\\\":\\\"medecins-sans-frontieres.ce9fd46e.png\\\",\\\"g0sdK\\\":\\\"medecins-sans-frontieres@2x.4f98ff4c.png\\\",\\\"5TckD\\\":\\\"razom.9be8270a.png\\\",\\\"jBqVw\\\":\\\"razom@2x.4fb2684d.png\\\",\\\"3SSZo\\\":\\\"action-against-hunger.21fd0d2d.png\\\",\\\"jYoAZ\\\":\\\"action-against-hunger@2x.dbc51f1e.png\\\",\\\"kB6Ee\\\":\\\"world-vision.aa02aa90.png\\\",\\\"3c2vT\\\":\\\"world-vision@2x.5feca8e5.png\\\",\\\"l5HDN\\\":\\\"charity-foundation.ffd42f47.png\\\",\\\"10xiN\\\":\\\"charity-foundation@2x.76ebf1ae.png\\\",\\\"8EQcy\\\":\\\"shopping-list.af841197.css\\\"}\"));"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$jrD5E","parcelRequire","$5beae1408dee8e31$export$32180ef41b15b513","document","body","$5beae1408dee8e31$var$header","querySelector","$5beae1408dee8e31$var$iconMobileMenu","$5beae1408dee8e31$var$darkModeLocalStored","localStorage","getItem","$5beae1408dee8e31$var$slider","$5beae1408dee8e31$var$setDarkModeStyle","classList","add","addEventListener","darkModeId","checked","setItem","remove","$5beae1408dee8e31$var$modalBoxEl","$5beae1408dee8e31$var$openModalBtnEl","$5beae1408dee8e31$var$openModalBtnSvgEl","$5beae1408dee8e31$var$signUpBtnMobile","$5beae1408dee8e31$var$iconHrefEl","$5beae1408dee8e31$var$toggleModal","contains","setAttribute","$parcel$interopDefault","style","width","height","$5beae1408dee8e31$var$menuHomeEl","$5beae1408dee8e31$var$menuShoppingEl","currentPageName","window","location","pathname","$5beae1408dee8e31$var$setCurrentPage","$5beae1408dee8e31$var$dropMenuHomeEl","$5beae1408dee8e31$var$dropMenuShoppingEl","dropCurrentPageName","$5beae1408dee8e31$var$dropSetCurrentPage","module","exports","URL","resolve","url","toString","$3a60d30aee96367f$var$NAN","$3a60d30aee96367f$var$symbolTag","$3a60d30aee96367f$var$reTrim","$3a60d30aee96367f$var$reIsBadHex","$3a60d30aee96367f$var$reIsBinary","$3a60d30aee96367f$var$reIsOctal","$3a60d30aee96367f$var$freeParseInt","parseInt","$3a60d30aee96367f$var$freeGlobal","$parcel$global","$3a60d30aee96367f$var$freeSelf","self","$3a60d30aee96367f$var$root","Function","$3a60d30aee96367f$var$objectToString","prototype","$3a60d30aee96367f$var$nativeMax","Math","max","$3a60d30aee96367f$var$nativeMin","min","$3a60d30aee96367f$var$now","Date","now","$3a60d30aee96367f$var$isObject","value","type","$3a60d30aee96367f$var$toNumber","$3a60d30aee96367f$var$isObjectLike","call","$3a60d30aee96367f$var$isSymbol","other","valueOf","replace","isBinary","test","slice","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","cancel","clearTimeout","flush","$dd12a6cabb8aa6ff$var$loaderOverlay","getElementsByClassName","$dd12a6cabb8aa6ff$export$5303cf8b8f096deb","$dd12a6cabb8aa6ff$export$4d81fd392b0a6f3e","$7Th1V","$0ed9d3cc9da1c6a2$var$refs","headerSignUp","headerSignUpMenu","signUp","children","$0ed9d3cc9da1c6a2$var$singUpModal","$0ed9d3cc9da1c6a2$var$buttonOfClose","$0ed9d3cc9da1c6a2$var$signUpForm1","$0ed9d3cc9da1c6a2$var$signUpForm2","$0ed9d3cc9da1c6a2$var$signUpButton","$0ed9d3cc9da1c6a2$var$signIpButton","$0ed9d3cc9da1c6a2$var$closeModalSingUp","e","buttonOfCloseSvg","buttonOfCloseUse","target","className","$0ed9d3cc9da1c6a2$var$escapeCloseModalSingUp","code","$0ed9d3cc9da1c6a2$var$openModalSingUp","preventDefault","name","email","password","buttonSignUp","JSON","stringify","reset","disabled","cursor","checkValidity","signIn","$0ed9d3cc9da1c6a2$var$createMarkupSignIp","$0ed9d3cc9da1c6a2$var$createMarkupSignUp","$gQZVa","$3e98312efa57e6ac$var$supportListEl","$3e98312efa57e6ac$var$btnSwiperEl","items","listItems","map","item","index","title","img","img2","padStart","join","innerHTML","$3e98312efa57e6ac$var$renderSupportList","fundArray","$3e98312efa57e6ac$var$swiper","$iaGrY","default","direction","spaceBetween","slidesPerView","rewind","navigation","nextEl","plugins","scrollContainer","update","slideNext","$c45188e2ea51b0bc$export$447284bd0b7b482a","$7xxPi","$d3aa16e5c5539775$var$prototypes","$mPJF1","$jEOyI","$4HaqR","$b4Co2","$jtnqo","$7Q6KL","$lt8Bz","$i1StC","$6Vw97","$5rbog","$5IPB6","$d3aa16e5c5539775$var$extendedDefaults","$d3aa16e5c5539775$var$Swiper","constructor","el","params","$dNWnP","extend","document1","getDocument","querySelectorAll","swipers","forEach","containerEl","newParams","push","swiper","__swiper__","support","$1gHsq","getSupport","device","$agupX","getDevice","userAgent","browser","$kMnIR","getBrowser","eventsListeners","eventsAnyListeners","modules","__modules__","Array","isArray","allModulesParams","mod","extendParams","$kmZuC","on","bind","once","off","emit","swiperParams","$1AMhv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","translate","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","getSlideIndex","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndexByData","filter","getAttribute","recalcSlides","enable","grabCursor","setGrabCursor","disable","unsetGrabCursor","setProgress","speed","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","emitContainerClasses","_emitClasses","cls","split","indexOf","containerModifierClass","getSlideClasses","destroyed","emitSlidesClasses","updates","slidesPerViewDynamic","view","exact","size","swiperSize","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","setTranslate","translateValue","rtlTranslate","newTranslate","translated","breakpoints","setBreakpoint","imageEl","complete","$fa3Xa","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","autoHeight","updateAutoHeight","virtual","slideTo","watchOverflow","checkOverflow","changeDirection","newDirection","needUpdate","currentDirection","changeLanguageDirection","rtl","dir","mount","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","getWrapper","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","addClasses","loop","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","preload","destroy","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","static","newDefaults","extendedDefaults","defaults","m","installModule","prototypeGroup","protoMethod","use","$kdpim","$c4Sz9","$d3aa16e5c5539775$export$2e2bcd8739ae039","$57d5daab652ed4f7$var$isObject","obj","$57d5daab652ed4f7$export$8b58be045bf06082","src","key","$57d5daab652ed4f7$export$3fdcb9b4d81368d8","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","childNodes","getElementsByTagName","createElementNS","importNode","hash","host","hostname","href","origin","protocol","search","$57d5daab652ed4f7$export$f65ca476c09acec0","doc","$57d5daab652ed4f7$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","screen","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$57d5daab652ed4f7$export$38b2d434cce3ea22","win","$a0cd23a932383e06$export$8694e5c03a4df8e6","object","$a0cd23a932383e06$export$bdd553fddd433dcb","delay","$a0cd23a932383e06$export$461939dd4422153","$a0cd23a932383e06$export$5ec402b7fcf74398","axis","window1","getWindow","matrix","curTransform","transformMatrix","curStyle","currentStyle","$a0cd23a932383e06$export$3735103072e4a80","WebKitCSSMatrix","transform","webkitTransform","a","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$a0cd23a932383e06$export$a6cdc56e425d0d0a","o","$a0cd23a932383e06$export$8b58be045bf06082","to","noExtend","nextSource","node","HTMLElement","nodeType","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","$a0cd23a932383e06$export$a607267f322101fd","varName","varValue","setProperty","$a0cd23a932383e06$export$a5dd2b4b1a116d6d","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$a0cd23a932383e06$export$616841b86f802685","$a0cd23a932383e06$export$eb846d859f2895e6","selector","matches","$a0cd23a932383e06$export$c8a8987d4410bf2d","tag","classes","$a0cd23a932383e06$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$a0cd23a932383e06$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$a0cd23a932383e06$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$a0cd23a932383e06$export$4184470d4bd0f986","prop","$a0cd23a932383e06$export$371885c503a01623","child","previousSibling","$a0cd23a932383e06$export$aedc7b608ca8e855","parents","parent","parentElement","$a0cd23a932383e06$export$6b974c5889da0bb5","fireCallBack","$a0cd23a932383e06$export$863f37913038cf77","includeMargins","offsetWidth","$0ec8fed4d94b7d0e$var$support","$0ec8fed4d94b7d0e$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$0ec8fed4d94b7d0e$var$calcSupport","$7792fe51e58fd98a$var$deviceCached","$7792fe51e58fd98a$export$30c823bc834d6ab4","overrides","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","os","$7792fe51e58fd98a$var$calcDevice","$f20ab12260e3c8aa$var$browser","$f20ab12260e3c8aa$export$89e15fc796a4a429","needPerspectiveFix","isSafari","String","includes","major","minor","num","Number","isWebView","$f20ab12260e3c8aa$var$calcBrowser","$eb78a4a6fe62148c$export$2e2bcd8739ae039","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$8cb02f6e7ce8fb4d$export$2e2bcd8739ae039","observers","attach","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$044a2fc60b096a26$export$2e2bcd8739ae039","events","handler","priority","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","$2nlfG","$e4f8f8ad9cb19e91$export$2e2bcd8739ae039","$aafDk","$jMtU7","$kPOBn","$8OSjY","$hBtS3","$29hok","$lCVGa","$3EEt9","$1bae36ef23f50f9c$export$2e2bcd8739ae039","clientWidth","clientHeight","isNaN","$7666f706306747b4$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","$e669b25e9df72d3e$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","visibleSlides","offsetHeight","$f2afd2868f8e8bc2$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$66bd21459a070ee6$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","$cd0d10153bc4aa64$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","updateSlidesProgress","$1909e99c7f96a783$export$2e2bcd8739ae039","getFilteredSlide","activeSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","$fbe9e371bf7fd468$export$2e2bcd8739ae039","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$fbe9e371bf7fd468$export$81ecffcda7ad6ebb","skip","$b09adb3584f4f5c0$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$b09adb3584f4f5c0$var$unlazy","$b09adb3584f4f5c0$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slideIndexLastInView","$2a947fda846258ea$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1umi3","$36b34534f351ba31$export$2e2bcd8739ae039","$1vvVW","$jVKXc","$a9I2T","$fzQVA","$1159e22d2ec30d20$export$2e2bcd8739ae039","virtualTranslate","getTranslate","$119175075d742233$export$2e2bcd8739ae039","byController","x","y","newProgress","$03be93aa6759504c$export$2e2bcd8739ae039","$764ce935999ac3a7$export$2e2bcd8739ae039","$b5732e441af1da9c$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","behavior","onTranslateToWrapperTransitionEnd","$e2mnO","$80fdd84039bf9f36$export$2e2bcd8739ae039","$C1QMZ","$3QxHx","$a3829d6301edc915$export$2e2bcd8739ae039","transitionDuration","$g81jD","$0724fc2edc847bc2$export$2e2bcd8739ae039","step","$bbde69f506a53967$export$2e2bcd8739ae039","$2cd05ec7ceec4531$export$2e2bcd8739ae039","$VoUIG","$e2d2e56ba51214aa$export$2e2bcd8739ae039","$hma03","$cNUv0","$73yc0","$30lE7","$6K2nc","$k6ufv","$0ac8a65aa579cc54$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","transitionStart","transitionEnd","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$ca2c3f7f2b80cb2e$export$2e2bcd8739ae039","newIndex","$9525e32ea72263e1$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$523356300376327b$export$2e2bcd8739ae039","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","$230229aaaf399bb3$export$2e2bcd8739ae039","$4e88e13af59bc0c1$export$2e2bcd8739ae039","threshold","currentSnap","$ea2bd50b7bab181f$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$jAQHU","$5b52a0cd14268ef0$export$2e2bcd8739ae039","$iefk9","$8TQCt","$e43a43ab7da51df1$export$2e2bcd8739ae039","slideRealIndex","$d4556bd6c5a7f2d0$export$2e2bcd8739ae039","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","currentSlideTranslate","slideToLoop","controller","control","loopParams","c","$67ac46f20fbdf8d4$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$8kBkW","$fa12fb2ee5c28987$export$2e2bcd8739ae039","$lGUvJ","$610d2748ae2a3d7a$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","$fca95b10f60c741c$export$2e2bcd8739ae039","$d20293ed7c4414e4$var$dummyEventAttached","$d20293ed7c4414e4$var$dummyEventListener","$d20293ed7c4414e4$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$i41Or","onLoad","$d20293ed7c4414e4$export$2e2bcd8739ae039","$iDuHK","$hwZYB","$7UVOE","$lI65j","$9A257","$7V4dh","$d913afca7372dc81$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","$d913afca7372dc81$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$cc35800f8eced6b5$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","evt","bubbles","dispatchEvent","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","$5c3a9c649f4b5f25$export$2e2bcd8739ae039","touchEndTime","timeDiff","pathTree","updateClickedSlide","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","prevEl","$d26a01a5d69e1b50$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$6f991739d9bf88be$export$2e2bcd8739ae039","stopImmediatePropagation","$fce26d50c7e61a92$export$2e2bcd8739ae039","$5c411feff72a52ef$export$2e2bcd8739ae039","$6iUdR","$50b100814b3eeec4$export$2e2bcd8739ae039","$kp9jL","$4970091fac3b5d77$var$isGridEnabled","$4970091fac3b5d77$export$2e2bcd8739ae039","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","directionChanged","needsReLoop","isEnabled","$edad5ec5e4a0f3c0$export$2e2bcd8739ae039","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","$lHwXw","$42a915ff7a2ae30b$export$2e2bcd8739ae039","$e5Gui","$fcc72e1d6455c726$export$2e2bcd8739ae039","suffixes","prefix","resultClasses","$fcc72e1d6455c726$var$prepareClasses","autoheight","centered","$a4227d791ec395d4$export$2e2bcd8739ae039","$3f584f40558f8bb9$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$128e9ae4dc5cc7e1$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$ed458fea3043c525$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$a38c14293bf6942a$export$2e2bcd8739ae039","checkProps","$a59367f5a43a662f$export$2e2bcd8739ae039","$b3f342b4a3f8a5f2$export$2e2bcd8739ae039","appendElement","tempDOM","$0b71822481728c98$export$2e2bcd8739ae039","prependElement","$5e5e77ec41ddd74a$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$5dc678a0b70a1ea8$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$9fd743be1d735d66$export$2e2bcd8739ae039","removeSlide","$fe3c58194e0402ae$export$2e2bcd8739ae039","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","_s","slideShadows","$fac719e250553c76$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$42fdb4152f52aa22$export$2e2bcd8739ae039","transformElements","allSlides","transitionEndTarget","eventTriggered","parentNode","getSlide","elementTransitionEnd","$3a65e8106b617bf7$export$2e2bcd8739ae039","shadowClass","shadowContainer","register","parse"],"version":3,"file":"shopping-list.a8cf2f0f.js.map"}