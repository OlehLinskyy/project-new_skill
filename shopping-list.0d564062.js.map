{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/header/header.js","node_modules/@parcel/runtime-js/lib/runtime-42336442d0ad0298.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/lodash.debounce/index.js","src/js/loader/loader.js","src/js/sing-up/sing-up.js","src/js/support-ukraine/support-ukraine.js","src/js/support-ukraine/funds-array.js","node_modules/@parcel/runtime-js/lib/runtime-9ef58f06ed24c712.js","node_modules/@parcel/runtime-js/lib/runtime-45beb20430606a3f.js","node_modules/@parcel/runtime-js/lib/runtime-95c59516c9789ec9.js","node_modules/@parcel/runtime-js/lib/runtime-7759db54ec43435e.js","node_modules/@parcel/runtime-js/lib/runtime-d7cb3839130e04da.js","node_modules/@parcel/runtime-js/lib/runtime-ec4943c9f9d64c0f.js","node_modules/@parcel/runtime-js/lib/runtime-e0cbaeb5bba5de51.js","node_modules/@parcel/runtime-js/lib/runtime-fb3e100691ed2cd7.js","node_modules/@parcel/runtime-js/lib/runtime-ff9aa990fb6ace4c.js","node_modules/@parcel/runtime-js/lib/runtime-4d1169d65a3b6675.js","node_modules/@parcel/runtime-js/lib/runtime-95dc31bc47de69c5.js","node_modules/@parcel/runtime-js/lib/runtime-4ddc5b32e00142ef.js","node_modules/@parcel/runtime-js/lib/runtime-8e7fde42afaed344.js","node_modules/@parcel/runtime-js/lib/runtime-b39ea5fda2e8d02a.js","node_modules/@parcel/runtime-js/lib/runtime-8465940913f4676c.js","node_modules/@parcel/runtime-js/lib/runtime-526f410be711285b.js","node_modules/@parcel/runtime-js/lib/runtime-402ee9a3ae853729.js","node_modules/@parcel/runtime-js/lib/runtime-d0f7e31a9ae39126.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","node_modules/@parcel/runtime-js/lib/runtime-2bdf8e1abdeecd9a.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import openCloseIcon from '../../images/icons.svg';\nimport styles from '../../sass/utils/_variables.scss';\nimport debounce from 'lodash.debounce';\n\n//   Light/dark theme switcher\nexport const body = document.body;\nconst header = document.querySelector('.page-nav');\nconst iconMobileMenu = document.querySelector('.menu-toggle');\nconst darkModeLocalStored = localStorage.getItem('darkMode');\nconst darkModeId = 'darkMode';\nlet slider = document.querySelector('.switch');\n\nslider.addEventListener('change', changeDarkMode);\nwindow.addEventListener('storage', syncChangeDarkMode);\n\nif (darkModeLocalStored === 'true') {\n  slider.checked = true;\n  // slider.setAttribute('checked', '');\n  setDarkModeStyle();\n}\n\nfunction changeDarkMode() {\n  if (slider.checked) {\n    setDarkModeStyle();\n    try {\n      localStorage.setItem(darkModeId, 'true');\n    } catch (error) {\n      console.error('Set state error: ', error.message);\n    }\n  } else {\n    setLightModeStyle();\n    try {\n      localStorage.setItem(darkModeId, 'false');\n    } catch (error) {\n      console.error('Set state error: ', error.message);\n    }\n  }\n}\n\nfunction syncChangeDarkMode(e) {\n  // console.log(e);\n  // console.log('slider.checked', slider.checked);\n  // console.log('e.newValue', e.newValue);\n\n  if (e.newValue === 'true') {\n    slider.checked = true;\n    slider.setAttribute('checked', '');\n    setDarkModeStyle();\n  } else {\n    slider.checked = false;\n    slider.removeAttribute('checked');\n    setLightModeStyle();\n  }\n}\n\nfunction setLightModeStyle() {\n  body.classList.remove('dark-mode');\n  header.classList.remove('dark-mode');\n  iconMobileMenu.classList.remove('dark-mode');\n  // sliderBall.classList.remove('dark-mode');\n}\n\nfunction setDarkModeStyle() {\n  body.classList.add('dark-mode');\n  header.classList.add('dark-mode');\n  iconMobileMenu.classList.add('dark-mode');\n  // sliderBall.classList.add('dark-mode');\n}\n\n// Opening/closing a mod for the mobile version\n\nconst modalBoxEl = document.querySelector('.data-modal');\nconst openModalBtnEl = document.querySelector('.js-open-menu');\nconst openModalBtnSvgEl = document.querySelector('.icon-burger');\nconst signUpBtnMobile = document.querySelector('.sign-up-btn-js');\nconst iconHrefEl = document.querySelector('.icon-href');\n\nopenModalBtnEl.addEventListener('click', toggleModal);\nsignUpBtnMobile.addEventListener('click', toggleModal);\n\nfunction toggleModal() {\n  if (modalBoxEl.classList.contains('is-hidden')) {\n    modalBoxEl.classList.remove('is-hidden');\n    body.classList.add('no-scroll-body-js');\n    iconHrefEl.setAttribute('href', `${openCloseIcon}#icon-cross`);\n    document.body.classList.add('modal-open');\n    openModalBtnSvgEl.style.width = '18px';\n    openModalBtnSvgEl.style.height = '18px';\n    return;\n  } else {\n    modalBoxEl.classList.add('is-hidden');\n    body.classList.remove('no-scroll-body-js');\n    iconHrefEl.setAttribute('href', `${openCloseIcon}#icon-menu`);\n    document.body.classList.remove('modal-open');\n    openModalBtnSvgEl.style.width = '24px';\n    openModalBtnSvgEl.style.height = '24px';\n  }\n}\n\n// Highlighting the name of the current page in yellow (menu in the header)\n\nconst menuHomeEl = document.querySelector('.menu__home');\nconst menuShoppingEl = document.querySelector('.menu__shopping');\n\nconst setCurrentPage = () => {\n  const currentPageName = window.location.pathname;\n  // console.log(currentPageName);\n  // console.log(menuHomeEl);\n  // console.log(menuShoppingEl);\n\n  if (\n    currentPageName === '/index.html' ||\n    currentPageName === '/project-new_skill/index.html' ||\n    currentPageName === '/project-new_skill/'\n  ) {\n    menuHomeEl.classList.add('current-page');\n    menuShoppingEl.classList.remove('current-page');\n    return;\n  }\n\n  menuShoppingEl.classList.add('current-page');\n  menuHomeEl.classList.remove('current-page');\n};\n\nsetCurrentPage();\n\n// Highlighting the name of the current page in yellow (menu in the modal)\n\nconst dropMenuHomeEl = document.querySelector('.drop-menu__home');\nconst dropMenuShoppingEl = document.querySelector('.drop-menu__shopping');\n\nconst dropSetCurrentPage = () => {\n  const dropCurrentPageName = window.location.pathname;\n\n  if (\n    dropCurrentPageName === '/index.html' ||\n    dropCurrentPageName === '/project-new_skill/index.html'\n  ) {\n    dropMenuHomeEl.classList.add('current-page');\n    return;\n  }\n  dropMenuShoppingEl.classList.add('current-page');\n};\n\ndropSetCurrentPage();\n","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"410VS\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","const [loaderOverlay] = document.getElementsByClassName('loader__overlay');\n\nconst removeLoader = () => {\n  loaderOverlay.classList.remove('on-loader');\n};\n\nconst addLoader = () => {\n  loaderOverlay.classList.add('on-loader');\n};\n\nexport { addLoader, removeLoader };\n","import { body } from '../header/header';\n\nconst refs = {\n  headerSignUp: document.querySelector('.auth__modal-open'),\n  headerSignUpMenu: document.querySelector('.sign-up-btn-js'),\n  signUp: document.querySelector('.sign-up'),\n};\n\nconst {\n  children: [singUpModal],\n} = refs.signUp;\n\nconst {\n  children: [buttonOfClose, signUpForm1, signUpForm2],\n} = singUpModal;\n\nconst signUpButton = singUpModal.children[3].children[0];\nconst signIpButton = singUpModal.children[3].children[1];\n\nconst closeModalSingUp = e => {\n  const buttonOfCloseSvg = buttonOfClose.children[0];\n  const buttonOfCloseUse = buttonOfClose.children[0].children[0];\n\n  if (\n    e.target.className === 'sign-up sign-up-hidden' ||\n    e.target.className === 'sign-up__cross' ||\n    e.target === buttonOfCloseSvg ||\n    e.target === buttonOfCloseUse\n  ) {\n    body.classList.remove('no-scroll-body-js');\n    refs.signUp.classList.remove('sign-up-hidden');\n  }\n};\n\nconst escapeCloseModalSingUp = e => {\n  if (e.code === 'Escape') {\n    body.classList.remove('no-scroll-body-js');\n    refs.signUp.classList.remove('sign-up-hidden');\n  }\n};\n\nconst openModalSingUp = () => {\n  body.classList.add('no-scroll-body-js');\n  refs.signUp.classList.add('sign-up-hidden');\n  refs.signUp.addEventListener('click', closeModalSingUp);\n  document.addEventListener('keydown', escapeCloseModalSingUp);\n};\n\nrefs.headerSignUp.addEventListener('click', openModalSingUp);\nrefs.headerSignUpMenu.addEventListener('click', openModalSingUp);\n\nconst checkForm1 = e => {\n  e.preventDefault();\n  const [name, email, password, buttonSignUp] = signUpForm1;\n  const signUp = {};\n  signUp.name = name.value;\n  signUp.email = email.value;\n  signUp.password = password.value;\n  localStorage.setItem('sign-up', JSON.stringify(signUp));\n  signUpForm1.reset();\n  buttonSignUp.disabled = true;\n  buttonSignUp.style.cursor = 'auto';\n};\n\nconst checkRequired1 = () => {\n  const [name, email, password, buttonSignUp] = signUpForm1;\n  if (\n    name.checkValidity() &&\n    email.checkValidity() &&\n    password.checkValidity()\n  ) {\n    buttonSignUp.disabled = false;\n    buttonSignUp.style.cursor = 'pointer';\n  } else {\n    buttonSignUp.disabled = true;\n    buttonSignUp.style.cursor = 'auto';\n  }\n};\n\nsignUpForm1.addEventListener('submit', checkForm1);\nsignUpForm1.addEventListener('input', checkRequired1);\n\nconst checkForm2 = e => {\n  e.preventDefault();\n  const [email, password, buttonSignUp] = signUpForm2;\n  const signIn = {};\n  signIn.email = email.value;\n  signIn.password = password.value;\n  localStorage.setItem('sign-in', JSON.stringify(signIn));\n  signUpForm2.reset();\n  buttonSignUp.disabled = true;\n  buttonSignUp.style.cursor = 'auto';\n};\n\nconst checkRequired2 = () => {\n  const [email, password, buttonSignUp] = signUpForm2;\n  if (email.checkValidity() && password.checkValidity()) {\n    buttonSignUp.disabled = false;\n    buttonSignUp.style.cursor = 'pointer';\n  } else {\n    buttonSignUp.disabled = true;\n    buttonSignUp.style.cursor = 'auto';\n  }\n};\n\nsignUpForm2.addEventListener('submit', checkForm2);\nsignUpForm2.addEventListener('input', checkRequired2);\n\nconst createMarkupSignIp = () => {\n  signIpButton.classList.add('sign-up-button-active');\n  signUpButton.classList.remove('sign-up-button-active');\n  signUpForm2.classList.remove('sign-up-hidden');\n  signUpForm1.classList.add('sign-up-hidden');\n};\n\ncreateMarkupSignIp();\n\nconst createMarkupSignUp = () => {\n  signUpButton.classList.add('sign-up-button-active');\n  signIpButton.classList.remove('sign-up-button-active');\n  signUpForm1.classList.remove('sign-up-hidden');\n  signUpForm2.classList.add('sign-up-hidden');\n};\n\nsignUpButton.addEventListener('click', createMarkupSignUp);\nsignIpButton.addEventListener('click', createMarkupSignIp);\n\ncreateMarkupSignUp();\n","import { fundArray } from './funds-array';\nimport Swiper from 'swiper';\n\nconst supportListEl = document.querySelector('.support__list');\nconst btnSwiperEl = document.querySelector('.swiper-button-next');\n\nconst renderSupportList = items => {\n  const listItems = items\n    .map((item, index) => {\n      const { title, url, img, img2 } = item;\n      const number = (index + 1).toString().padStart(2, '0');\n      return `\n          <li class=\"support__list-item swiper-slide\">\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer nofollow\"\n              aria-label=\"company icon\"\n              class=\"support__link\"\n              href=\"${url}\"\n            >\n              <img\n                src=\"${img}\"\n                alt=\"${title}\"\n                class=\"support__logo\"\n                srcset=\"${img} 1x, ${img2} 2x\" \n                width=\"149\"\n                height=\"auto\"\n                loading=\"lazy\"\n              />\n            </a>\n            <span class=\"support__number\">${number}</span>\n          </li>\n              `;\n    })\n    .join('');\n  supportListEl.innerHTML = `${listItems}`;\n};\n\nrenderSupportList(fundArray);\n\nconst swiper = new Swiper('.swiper', {\n  direction: 'vertical',\n  spaceBetween: 19,\n  slidesPerView: 'auto',\n  rewind: true,\n  allowTouchMove: false,\n  navigation: {\n    nextEl: '.swiper-button-next',\n  },\n\n  plugins: {\n    scrollContainer: true,\n  },\n});\n\nswiper.update();\n\nbtnSwiperEl.addEventListener('click', () => {\n  swiper.slideNext();\n});\n","export const fundArray = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: require('../../images/png/support-ukraine/save-the-children.png'),\n    img2: require('../../images/png/support-ukraine/save-the-children@2x.png'),\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: require('../../images/png/support-ukraine/project-hope.png'),\n    img2: require('../../images/png/support-ukraine/project-hope@2x.png'),\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: require('../../images/png/support-ukraine/united24.png'),\n    img2: require('../../images/png/support-ukraine/united24@2x.png'),\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: require('../../images/png/support-ukraine/international-medical-corps.png'),\n    img2: require('../../images/png/support-ukraine/international-medical-corps@2x.png'),\n  },\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: require('../../images/png/support-ukraine/medecins-sans-frontieres.png'),\n    img2: require('../../images/png/support-ukraine/medecins-sans-frontieres@2x.png'),\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: require('../../images/png/support-ukraine/razom.png'),\n    img2: require('../../images/png/support-ukraine/razom@2x.png'),\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: require('../../images/png/support-ukraine/action-against-hunger.png'),\n    img2: require('../../images/png/support-ukraine/action-against-hunger@2x.png'),\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: require('../../images/png/support-ukraine/world-vision.png'),\n    img2: require('../../images/png/support-ukraine/world-vision@2x.png'),\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: require('../../images/png/support-ukraine/charity-foundation.png'),\n    img2: require('../../images/png/support-ukraine/charity-foundation@2x.png'),\n  },\n];\n","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"bYjHD\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"l32aI\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"4bNl6\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"9ycmq\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"evV2o\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"1TxhQ\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"bSMpB\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"9HxQS\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"ello4\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"bYmvG\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"ly5cG\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"iB2ax\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"4IlVE\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"hg5Bh\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"eyD5I\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"eN2CG\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"5uz0t\");","module.exports = require('./helpers/bundle-url').getBundleURL('cKi2J') + require('./helpers/bundle-manifest').resolve(\"cpz5E\");","/**\n * Swiper 9.3.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: May 10, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    if (swiper.isElement) {\n      swiper.el.shadowEl.append(liveRegion);\n    } else {\n      swiper.el.append(liveRegion);\n    }\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"cKi2J\\\":\\\"shopping-list.0d564062.js\\\",\\\"410VS\\\":\\\"icons.e51562f1.svg\\\",\\\"bYjHD\\\":\\\"save-the-children.68a6fe0f.png\\\",\\\"l32aI\\\":\\\"save-the-children@2x.0fdb2242.png\\\",\\\"4bNl6\\\":\\\"project-hope.8bcb37cf.png\\\",\\\"9ycmq\\\":\\\"project-hope@2x.18ea4a56.png\\\",\\\"evV2o\\\":\\\"united24.dd808d3c.png\\\",\\\"1TxhQ\\\":\\\"united24@2x.e08f0aec.png\\\",\\\"bSMpB\\\":\\\"international-medical-corps.f54244cf.png\\\",\\\"9HxQS\\\":\\\"international-medical-corps@2x.f74905cc.png\\\",\\\"ello4\\\":\\\"medecins-sans-frontieres.c4db37f3.png\\\",\\\"bYmvG\\\":\\\"medecins-sans-frontieres@2x.ed89f3c6.png\\\",\\\"ly5cG\\\":\\\"razom.5db5ecc1.png\\\",\\\"iB2ax\\\":\\\"razom@2x.fcc9c7d3.png\\\",\\\"4IlVE\\\":\\\"action-against-hunger.317dc7e1.png\\\",\\\"hg5Bh\\\":\\\"action-against-hunger@2x.b9153887.png\\\",\\\"eyD5I\\\":\\\"world-vision.7823bf96.png\\\",\\\"eN2CG\\\":\\\"world-vision@2x.aca383e2.png\\\",\\\"5uz0t\\\":\\\"charity-foundation.56bf2558.png\\\",\\\"cpz5E\\\":\\\"charity-foundation@2x.2814aba7.png\\\",\\\"8EQcy\\\":\\\"shopping-list.af841197.css\\\"}\"));"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$aLjN9","parcelRequire","$8b1229c96e655187$export$32180ef41b15b513","document","body","$8b1229c96e655187$var$header","querySelector","$8b1229c96e655187$var$iconMobileMenu","$8b1229c96e655187$var$darkModeLocalStored","localStorage","getItem","$8b1229c96e655187$var$darkModeId","$8b1229c96e655187$var$slider","$8b1229c96e655187$var$setLightModeStyle","classList","remove","$8b1229c96e655187$var$setDarkModeStyle","add","addEventListener","checked","setItem","error","console","message","window","e","newValue","setAttribute","removeAttribute","$8b1229c96e655187$var$modalBoxEl","$8b1229c96e655187$var$openModalBtnEl","$8b1229c96e655187$var$openModalBtnSvgEl","$8b1229c96e655187$var$signUpBtnMobile","$8b1229c96e655187$var$iconHrefEl","$8b1229c96e655187$var$toggleModal","contains","$parcel$interopDefault","style","width","height","$8b1229c96e655187$var$menuHomeEl","$8b1229c96e655187$var$menuShoppingEl","currentPageName","location","pathname","$8b1229c96e655187$var$setCurrentPage","$8b1229c96e655187$var$dropMenuHomeEl","$8b1229c96e655187$var$dropMenuShoppingEl","dropCurrentPageName","$8b1229c96e655187$var$dropSetCurrentPage","module","exports","getBundleURL","resolve","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","value","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","$f4ea6fc35b8f94b3$var$NAN","$f4ea6fc35b8f94b3$var$symbolTag","$f4ea6fc35b8f94b3$var$reTrim","$f4ea6fc35b8f94b3$var$reIsBadHex","$f4ea6fc35b8f94b3$var$reIsBinary","$f4ea6fc35b8f94b3$var$reIsOctal","$f4ea6fc35b8f94b3$var$freeParseInt","parseInt","$f4ea6fc35b8f94b3$var$freeGlobal","$parcel$global","$f4ea6fc35b8f94b3$var$freeSelf","self","$f4ea6fc35b8f94b3$var$root","Function","$f4ea6fc35b8f94b3$var$objectToString","prototype","toString","$f4ea6fc35b8f94b3$var$nativeMax","Math","max","$f4ea6fc35b8f94b3$var$nativeMin","min","$f4ea6fc35b8f94b3$var$now","Date","now","$f4ea6fc35b8f94b3$var$isObject","type","$f4ea6fc35b8f94b3$var$toNumber","$f4ea6fc35b8f94b3$var$isObjectLike","call","$f4ea6fc35b8f94b3$var$isSymbol","other","valueOf","isBinary","test","slice","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","cancel","clearTimeout","flush","$dedc35ecb9ca643f$var$loaderOverlay","getElementsByClassName","$dedc35ecb9ca643f$export$5303cf8b8f096deb","$dedc35ecb9ca643f$export$4d81fd392b0a6f3e","$bWgPh","$5c0f42cc40971939$var$refs","headerSignUp","headerSignUpMenu","signUp","children","$5c0f42cc40971939$var$singUpModal","$5c0f42cc40971939$var$buttonOfClose","$5c0f42cc40971939$var$signUpForm1","$5c0f42cc40971939$var$signUpForm2","$5c0f42cc40971939$var$signUpButton","$5c0f42cc40971939$var$signIpButton","$5c0f42cc40971939$var$closeModalSingUp","buttonOfCloseSvg","buttonOfCloseUse","target","className","$5c0f42cc40971939$var$escapeCloseModalSingUp","code","$5c0f42cc40971939$var$openModalSingUp","preventDefault","name","email","password","buttonSignUp","JSON","stringify","reset","disabled","cursor","checkValidity","signIn","$5c0f42cc40971939$var$createMarkupSignIp","$5c0f42cc40971939$var$createMarkupSignUp","$5lb6U","$d10061ed1ffdee18$var$supportListEl","$d10061ed1ffdee18$var$btnSwiperEl","items","listItems","map","item","index","title","img","img2","padStart","join","innerHTML","$d10061ed1ffdee18$var$renderSupportList","fundArray","$d10061ed1ffdee18$var$swiper","$2pSj8","default","direction","spaceBetween","slidesPerView","rewind","allowTouchMove","navigation","nextEl","plugins","scrollContainer","update","slideNext","$3e378832c8fb0faa$export$447284bd0b7b482a","$58sFY","$1c280aeb2839a22d$var$prototypes","$3lgo1","$42aG2","$lUFJw","$59lEw","$itDrZ","$aSak5","$61axM","$lrPYL","$lWyhG","$h5TWE","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","constructor","el","params","$1EjTE","extend","document1","getDocument","querySelectorAll","swipers","forEach","containerEl","newParams","push","swiper","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsListeners","eventsAnyListeners","modules","__modules__","Array","isArray","allModulesParams","mod","extendParams","$6gDqh","on","bind","once","off","emit","swiperParams","$959nv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","translate","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","getSlideIndex","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndexByData","filter","getAttribute","recalcSlides","enable","grabCursor","setGrabCursor","disable","unsetGrabCursor","setProgress","speed","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","emitContainerClasses","_emitClasses","cls","split","indexOf","containerModifierClass","getSlideClasses","destroyed","emitSlidesClasses","updates","slidesPerViewDynamic","view","exact","size","swiperSize","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","setTranslate","translateValue","rtlTranslate","newTranslate","translated","breakpoints","setBreakpoint","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","autoHeight","updateAutoHeight","virtual","slideTo","watchOverflow","checkOverflow","changeDirection","newDirection","needUpdate","currentDirection","changeLanguageDirection","rtl","dir","mount","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","getWrapper","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","addClasses","loop","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","preload","destroy","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","static","newDefaults","extendedDefaults","defaults","m","installModule","prototypeGroup","protoMethod","use","$hoK65","$5NIfu","$1c280aeb2839a22d$export$2e2bcd8739ae039","$3bd3f193ccd5630c$var$isObject","obj","$3bd3f193ccd5630c$export$8b58be045bf06082","src","key","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","childNodes","getElementsByTagName","createElementNS","importNode","hash","host","hostname","href","origin","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","screen","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","$1338f5f0d60fe216$export$5ec402b7fcf74398","axis","window1","getWindow","matrix","curTransform","transformMatrix","curStyle","currentStyle","$1338f5f0d60fe216$export$3735103072e4a80","WebKitCSSMatrix","transform","webkitTransform","a","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","o","$1338f5f0d60fe216$export$8b58be045bf06082","to","noExtend","nextSource","node","HTMLElement","nodeType","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","classes","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","platform","ua","ios","android","screenWidth","screenHeight","ipad","ipod","iphone","windows","macos","os","$33c7356d035118c5$var$calcDevice","$f7ea505fdac53fb2$var$browser","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","String","includes","major","minor","num","Number","isWebView","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","events","handler","priority","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","$hIP6N","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","clientHeight","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","visibleSlides","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","updateSlidesProgress","$0f7fe5860e74601f$export$2e2bcd8739ae039","getFilteredSlide","activeSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slideIndexLastInView","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","getTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","newProgress","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","behavior","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","$488q8","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","$cGTS6","$7Y909","$3B7dt","$dhKLJ","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","transitionStart","transitionEnd","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","currentSlideTranslate","slideToLoop","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","evt","bubbles","dispatchEvent","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","touchEndTime","timeDiff","pathTree","updateClickedSlide","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","prevEl","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","directionChanged","needsReLoop","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","suffixes","prefix","resultClasses","$ba79a0353521e453$var$prepareClasses","autoheight","centered","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","_s","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","allSlides","transitionEndTarget","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer","register","parse"],"version":3,"file":"shopping-list.0d564062.js.map"}