{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/header/header.js","node_modules/@parcel/runtime-js/lib/runtime-4ead0bdc8eea8f0d.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/lodash.debounce/index.js","node_modules/@swc/helpers/lib/_type_of.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","src/js/loader/loader.js","src/js/support-ukraine/support-ukraine.js","src/js/support-ukraine/funds-array.js","node_modules/@parcel/runtime-js/lib/runtime-4fdba6fb261c5e45.js","node_modules/@parcel/runtime-js/lib/runtime-9fb572cff567c8af.js","node_modules/@parcel/runtime-js/lib/runtime-2a6ae39a52f02c9a.js","node_modules/@parcel/runtime-js/lib/runtime-4675617ece502dc6.js","node_modules/@parcel/runtime-js/lib/runtime-717ae8753628e991.js","node_modules/@parcel/runtime-js/lib/runtime-294b23a9fa6849aa.js","node_modules/@parcel/runtime-js/lib/runtime-d3ad358644d5f2b7.js","node_modules/@parcel/runtime-js/lib/runtime-4b1240f35f1ef2f7.js","node_modules/@parcel/runtime-js/lib/runtime-552db726a7448408.js","node_modules/@parcel/runtime-js/lib/runtime-7a18546430af897b.js","node_modules/@parcel/runtime-js/lib/runtime-e82f30d856c7427d.js","node_modules/@parcel/runtime-js/lib/runtime-0d940a7498f29064.js","node_modules/@parcel/runtime-js/lib/runtime-4231972f54711fcb.js","node_modules/@parcel/runtime-js/lib/runtime-656c6ab62d87419d.js","node_modules/@parcel/runtime-js/lib/runtime-64a79cc1165d71cc.js","node_modules/@parcel/runtime-js/lib/runtime-702ff7eee4dc1d0b.js","node_modules/@parcel/runtime-js/lib/runtime-0f1223b535024234.js","node_modules/@parcel/runtime-js/lib/runtime-6b31d67655bcf1e4.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","node_modules/@parcel/runtime-js/lib/runtime-b60d5eab32945cff.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import openCloseIcon from '../../images/icons.svg';\nimport styles from '../../sass/utils/_variables.scss';\nimport debounce from 'lodash.debounce';\n\n//   Перемикач світла/темна тема\nconst body = document.body;\n\nconst header = document.querySelector('.header');\nconst isDarkModeStored = localStorage.getItem('darkMode') === 'true';\nlet slider = document.querySelector('.switch');\n\nconst switchModeElStyles = {\n  body: {\n    lightMode: {\n      bgColor: '#f6f6f6',\n      mainTextColor: '#111111',\n    },\n    darkMode: {\n      bgColor: '#202024',\n      mainTextColor: '#fff',\n    },\n  },\n\n  header: {\n    lightMode: {\n      bgColor: '#fff',\n      mainTextColor: '#111111',\n      borderColor: '#111111',\n    },\n    darkMode: {\n      bgColor: '#111111',\n      mainTextColor: '#fff',\n      borderColor: '#fff',\n    },\n  },\n};\n\nslider.addEventListener('change', changeDarkMode);\n\nif (isDarkModeStored) {\n  slider.checked = true;\n  setDarkModeBodyStyle();\n  setDarkModeHeaderStyle();\n\n  // body.classList.add('dark');\n  // header.classList.add('dark');\n}\n\nfunction changeDarkMode() {\n  const darkModeId = 'darkMode';\n\n  if (slider.checked) {\n    // body.classList.add('dark');\n    // header.classList.add('dark');\n\n    localStorage.setItem(darkModeId, 'true');\n    setDarkModeBodyStyle();\n    setDarkModeHeaderStyle();\n    document.querySelector('.icon-href').setAttribute('fill', 'white');\n  } else {\n    // body.classList.remove('dark');\n    // header.classList.remove('dark');\n\n    localStorage.setItem(darkModeId, 'false');\n    setLightModeBodyStyle();\n    setLightModeHeaderStyle();\n    document.querySelector('.icon-href').setAttribute('fill', 'black');\n  }\n}\n\nfunction setLightModeBodyStyle() {\n  // if (slider.checked) {\n  //     body.style.backgroundColor = bgColor;\n  //     body.style.color = mainTextColor;\n  // } else {\n  //     body.style.backgroundColor = bgColor;\n  //     body.style.color = mainTextColor;\n  // };\n\n  const { bgColor, mainTextColor } = switchModeElStyles.body.lightMode;\n\n  body.style.backgroundColor = bgColor;\n  body.style.color = mainTextColor;\n}\n\nfunction setDarkModeBodyStyle() {\n  const { bgColor, mainTextColor } = switchModeElStyles.body.darkMode;\n\n  body.style.backgroundColor = bgColor;\n  body.style.color = mainTextColor;\n}\n\nfunction setLightModeHeaderStyle() {\n  const { bgColor, mainTextColor, borderColor } =\n    switchModeElStyles.header.lightMode;\n\n  header.style.backgroundColor = bgColor;\n  header.style.color = mainTextColor;\n  header.style.borderColor = borderColor;\n}\n\nfunction setDarkModeHeaderStyle() {\n  const { bgColor, mainTextColor, borderColor } =\n    switchModeElStyles.header.darkMode;\n\n  header.style.backgroundColor = bgColor;\n  header.style.color = mainTextColor;\n  header.style.borderColor = borderColor;\n}\n\n//   Відкриття/Закриття модалки для моб.версії\n\nconst modalBoxEl = document.querySelector('.data-modal');\nconst openModalBtnEl = document.querySelector('.js-open-menu');\nconst iconHrefEl = document.querySelector('.icon-href');\n\nopenModalBtnEl.addEventListener('click', toggleModal);\n\nif (isDarkModeStored) {\n  iconHrefEl.setAttribute('fill', 'white');\n} else {\n  iconHrefEl.setAttribute('fill', 'black');\n}\n\nfunction toggleModal() {\n  if (modalBoxEl.classList.contains('is-hidden')) {\n    modalBoxEl.classList.remove('is-hidden');\n    iconHrefEl.setAttribute('href', `${openCloseIcon}#icon-cross`);\n    document.body.classList.add('modal-open');\n    // iconHrefEl.setAttribute('width', '20px');\n    // iconHrefEl.setAttribute('height', '20px');\n    return;\n  } else {\n    modalBoxEl.classList.add('is-hidden');\n    iconHrefEl.setAttribute('href', `${openCloseIcon}#icon-menu`);\n    document.body.classList.remove('modal-open');\n  }\n}\n\n// Виділення жовтим назву поточної сторінки (меню в хедері)\n\nconst menuHomeEl = document.querySelector('.menu__home');\nconst menuShoppingEl = document.querySelector('.menu__shopping');\n\nconst setCurrentPage = () => {\n  const currentPageName = window.location.pathname;\n  // console.log(currentPageName);\n  // console.log(menuHomeEl);\n  // console.log(menuShoppingEl);\n\n  if (\n    currentPageName === '/index.html' ||\n    currentPageName === '/project-new_skill/index.html' ||\n    currentPageName === '/project-new_skill/'\n  ) {\n    menuHomeEl.classList.add('current-page');\n    menuShoppingEl.classList.remove('current-page');\n    return;\n  }\n\n  menuShoppingEl.classList.add('current-page');\n  menuHomeEl.classList.remove('current-page');\n};\n\nsetCurrentPage();\n\n// Виділення жовтим назву поточної сторінки (меню в модалці)\n\nconst dropMenuHomeEl = document.querySelector('.drop-menu__home');\nconst dropMenuShoppingEl = document.querySelector('.drop-menu__shopping');\n\nconst dropSetCurrentPage = () => {\n  const dropCurrentPageName = window.location.pathname;\n\n  if (\n    dropCurrentPageName === '/index.html' ||\n    dropCurrentPageName === '/project-new_skill/index.html'\n  ) {\n    dropMenuHomeEl.classList.add('current-page');\n    return;\n  }\n  dropMenuShoppingEl.classList.add('current-page');\n};\n\ndropSetCurrentPage();\n\n// Обрізання назви Shopping list при певній довжині екрану\n\n// const mediaQuery = window.matchMedia('(min-width: 577px) and (max-width: 640px)'); // визначаємо порогове значення\n// const menuShoppingRef = document.getElementById('menu__shopping-list');\n// const DEBOUNCE_DELAY = 400;\n\n// function handleMediaChange(event) {\n//     if (event.matches) {\n//         menuShoppingRef.textContent = 'Shopping...'; // змінюємо текстовий вміст елементу\n//     } else {\n//         menuShoppingRef.textContent = '';\n//         menuShoppingRef.insertAdjacentHTML('beforeend', `Shopping list\n//             <svg class=\"icon-cart\" width=\"13.33\" height=\"16.67\">\n//                 <use href=\"/src/images/icons.svg#icon-email\"></use>\n//             </svg>\n//         `); // змінюємо текстовий вміст елементу назад\n//         // menuShoppingRef.setAttribute();\n//     }\n// }\n\n// // function setShortNameShopList() {\n// //     menuShoppingRef.textContent = 'Shopping...';\n// // }\n\n// mediaQuery.addEventListener('change', debounce(handleMediaChange, DEBOUNCE_DELAY)); // додаємо слухача на подію зміни медіа-запиту\n\n// // викликаємо функцію handleMediaChange при завантаженні сторінки, щоб встановити початковий текстовий вміст елементу\n// handleMediaChange(mediaQuery);\n","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"410VS\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","const [loaderOverlay] = document.getElementsByClassName('loader__overlay');\n\nconst removeLoader = () => {\n  setTimeout(() => {\n    loaderOverlay.classList.remove('on-loader');\n  }, 250);\n};\n\nconst addLoader = () => {\n  loaderOverlay.classList.add('on-loader');\n};\n\nexport { addLoader, removeLoader };\n","import { fundArray } from './funds-array';\nimport Swiper from 'swiper';\n\nconst supportListEl = document.querySelector('.support__list');\nconst btnSwiperEl = document.querySelector('.swiper-button-next');\n\nconst renderSupportList = items => {\n  const listItems = items\n    .map((item, index) => {\n      const { title, url, img, img2 } = item;\n      const number = (index + 1).toString().padStart(2, '0');\n      return `\n           <li class=\"support__list-item swiper-slide\">\n              <p class=\"support__number\">${number}</p>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer nofollow\"\n                aria-label=\"company icon\"\n                class=\"support__link\"\n                href=\"${url}\"\n              >\n                <img\n                  src=\"${img}\"\n                  alt=\"${title}\"\n                  class=\"support__logo\"\n                  srcset=\"${img} 1x, ${img2} 2x\" \n                  width=\"149\"\n                  loading=\"lazy\"\n                />\n              </a>\n            </li>\n              `;\n    })\n    .join('');\n  supportListEl.innerHTML = `${listItems}`;\n};\n\nrenderSupportList(fundArray);\n\nconst swiper = new Swiper('.swiper', {\n  direction: 'vertical',\n  spaceBetween: 20,\n  slidesPerView: 'auto',\n  rewind: true,\n\n  navigation: {\n    nextEl: '.swiper-button-next',\n  },\n\n  plugins: {\n    scrollContainer: true,\n  },\n});\n\nswiper.update();\n\nbtnSwiperEl.addEventListener('click', () => {\n  swiper.slideNext();\n});\n\n// const imgSlides = document.querySelectorAll('.support__list-item');\n// const sliderBtn = document.querySelector('.support__btn');\n\n// let counter = 0;\n// let moveDown = false;\n\n// const verticalSlider = function () {\n//   imgSlides.forEach(function (slide) {\n//     slide.style.transform = `translateY(-${counter * 100}%)`;\n//   });\n// };\n\n// sliderBtn.addEventListener('click', function () {\n//   if (moveDown) {\n//     counter -= 3;\n//     if (counter < 0) {\n//       counter = 0;\n//       moveDown = false;\n//       sliderBtn.querySelector('.support__btn-icon').style.transform = '';\n//     }\n//   } else {\n//     counter += 3;\n//     if (counter >= imgSlides.length) {\n//       counter = imgSlides.length - 1;\n//       moveDown = true;\n//       sliderBtn.querySelector('.support__btn-icon').style.transform =\n//         'rotate(180deg)';\n//     }\n//   }\n//   verticalSlider(renderSupportList);\n// });\n","export const fundArray = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: require('../../images/png/support-ukraine/save-the-children.png'),\n    img2: require('../../images/png/support-ukraine/save-the-children@2x.png'),\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: require('../../images/png/support-ukraine/project-hope.png'),\n    img2: require('../../images/png/support-ukraine/project-hope@2x.png'),\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: require('../../images/png/support-ukraine/united24.png'),\n    img2: require('../../images/png/support-ukraine/united24@2x.png'),\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: require('../../images/png/support-ukraine/international-medical-corps.png'),\n    img2: require('../../images/png/support-ukraine/international-medical-corps@2x.png'),\n  },\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: require('../../images/png/support-ukraine/medecins-sans-frontieres.png'),\n    img2: require('../../images/png/support-ukraine/medecins-sans-frontieres@2x.png'),\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: require('../../images/png/support-ukraine/razom.png'),\n    img2: require('../../images/png/support-ukraine/razom@2x.png'),\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: require('../../images/png/support-ukraine/action-against-hunger.png'),\n    img2: require('../../images/png/support-ukraine/action-against-hunger@2x.png'),\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: require('../../images/png/support-ukraine/world-vision.png'),\n    img2: require('../../images/png/support-ukraine/world-vision@2x.png'),\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: require('../../images/png/support-ukraine/charity-foundation.png'),\n    img2: require('../../images/png/support-ukraine/charity-foundation@2x.png'),\n  },\n];\n","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"bYjHD\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"l32aI\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"4bNl6\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"9ycmq\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"evV2o\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"1TxhQ\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"bSMpB\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"9HxQS\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"ello4\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"bYmvG\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"ly5cG\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"iB2ax\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"4IlVE\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"hg5Bh\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"eyD5I\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"eN2CG\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"5uz0t\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"cpz5E\");","/**\n * Swiper 9.2.4\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 21, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slidesEl.prepend(swiper.slides[index]);\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slidesEl.append(swiper.slides[index]);\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n    if (swiper.isElement) {\n      liveRegion.setAttribute('slot', 'container-end');\n    }\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup,\n      spaceBetween\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n  };\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      spaceBetween,\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"kJAFa\\\":\\\"index.fc488e53.js\\\",\\\"410VS\\\":\\\"icons.73473773.svg\\\",\\\"bYjHD\\\":\\\"save-the-children.164cf59f.png\\\",\\\"l32aI\\\":\\\"save-the-children@2x.86c690d0.png\\\",\\\"4bNl6\\\":\\\"project-hope.ac2f4725.png\\\",\\\"9ycmq\\\":\\\"project-hope@2x.b2c00627.png\\\",\\\"evV2o\\\":\\\"united24.eb8f4e7c.png\\\",\\\"1TxhQ\\\":\\\"united24@2x.47d4c2fe.png\\\",\\\"bSMpB\\\":\\\"international-medical-corps.f83b1230.png\\\",\\\"9HxQS\\\":\\\"international-medical-corps@2x.02af5df3.png\\\",\\\"ello4\\\":\\\"medecins-sans-frontieres.ce9fd46e.png\\\",\\\"bYmvG\\\":\\\"medecins-sans-frontieres@2x.4f98ff4c.png\\\",\\\"ly5cG\\\":\\\"razom.9be8270a.png\\\",\\\"iB2ax\\\":\\\"razom@2x.4fb2684d.png\\\",\\\"4IlVE\\\":\\\"action-against-hunger.21fd0d2d.png\\\",\\\"hg5Bh\\\":\\\"action-against-hunger@2x.dbc51f1e.png\\\",\\\"eyD5I\\\":\\\"world-vision.aa02aa90.png\\\",\\\"eN2CG\\\":\\\"world-vision@2x.5feca8e5.png\\\",\\\"5uz0t\\\":\\\"charity-foundation.ffd42f47.png\\\",\\\"cpz5E\\\":\\\"charity-foundation@2x.76ebf1ae.png\\\",\\\"5UbS1\\\":\\\"index.5d7353e5.css\\\"}\"));"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$aqTqZ","parcelRequire","$8b1229c96e655187$var$body","document","body","$8b1229c96e655187$var$header","querySelector","$8b1229c96e655187$var$isDarkModeStored","localStorage","getItem","$8b1229c96e655187$var$slider","$8b1229c96e655187$var$switchModeElStyles","lightMode","bgColor","mainTextColor","darkMode","borderColor","$8b1229c96e655187$var$setDarkModeBodyStyle","_darkMode","style","backgroundColor","color","$8b1229c96e655187$var$setDarkModeHeaderStyle","addEventListener","darkModeId","checked","setItem","setAttribute","_lightMode","$8b1229c96e655187$var$setLightModeHeaderStyle","$8b1229c96e655187$var$modalBoxEl","$8b1229c96e655187$var$openModalBtnEl","$8b1229c96e655187$var$iconHrefEl","classList","contains","remove","concat","$parcel$interopDefault","add","$8b1229c96e655187$var$menuHomeEl","$8b1229c96e655187$var$menuShoppingEl","currentPageName","window","location","pathname","$8b1229c96e655187$var$setCurrentPage","dropCurrentPageName","$8b1229c96e655187$var$dropMenuHomeEl","$8b1229c96e655187$var$dropMenuShoppingEl","module","exports","getBundleURL","resolve","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","value","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","$l5bVx","$f4ea6fc35b8f94b3$var$reTrim","$f4ea6fc35b8f94b3$var$reIsBadHex","$f4ea6fc35b8f94b3$var$reIsBinary","$f4ea6fc35b8f94b3$var$reIsOctal","$f4ea6fc35b8f94b3$var$freeParseInt","parseInt","$f4ea6fc35b8f94b3$var$freeGlobal","$parcel$global","$f4ea6fc35b8f94b3$var$freeSelf","self","$f4ea6fc35b8f94b3$var$root","Function","$f4ea6fc35b8f94b3$var$objectToString","prototype","toString","$f4ea6fc35b8f94b3$var$nativeMax","Math","max","$f4ea6fc35b8f94b3$var$nativeMin","min","$f4ea6fc35b8f94b3$var$now","Date","now","$f4ea6fc35b8f94b3$var$isObject","type","$f4ea6fc35b8f94b3$var$toNumber","$f4ea6fc35b8f94b3$var$isObjectLike","call","$f4ea6fc35b8f94b3$var$isSymbol","other","valueOf","isBinary","test","slice","func","wait","options","lastArgs","lastThis","maxWait","result1","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","result","remainingWait","debounced","isInvoking","arguments","this","cancel","clearTimeout","flush","defineProperty","default","obj","constructor","Symbol","arr","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","__esModule","Array","isArray","iter","iterator","from","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","name","len","arr2","instance","Constructor","$74e7f8130373505f$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$f215c72f040a88cf$var$_arrayLikeToArray","$dedc35ecb9ca643f$var$loaderOverlay","getElementsByClassName","$dedc35ecb9ca643f$export$5303cf8b8f096deb","$dedc35ecb9ca643f$export$4d81fd392b0a6f3e","$5lb6U","items","listItems","$d10061ed1ffdee18$var$supportListEl","$d10061ed1ffdee18$var$btnSwiperEl","fundArray","map","item","index","title","img","img2","number","padStart","join","innerHTML","$d10061ed1ffdee18$var$swiper","$2pSj8","direction","spaceBetween","slidesPerView","rewind","navigation","nextEl","plugins","scrollContainer","update","slideNext","$3e378832c8fb0faa$export$447284bd0b7b482a","$8MBJY","$1c280aeb2839a22d$var$prototypes","eventsEmitter","$3lgo1","$42aG2","translate","$lUFJw","transition","$59lEw","slide","$itDrZ","loop","$aSak5","grabCursor","$61axM","events","$lrPYL","breakpoints","$lWyhG","checkOverflow","$h5TWE","classes","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","Swiper","_len","_key","_modules","el","params","ref","$1EjTE","extend","$58sFY","getDocument","querySelectorAll","swipers","forEach","containerEl","newParams","push","swiper","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsListeners","eventsAnyListeners","modules","$8nrFW","__modules__","allModulesParams","mod","extendParams","$6gDqh","on","bind","once","off","emit","swiperParams","$959nv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndex","filter","getAttribute","setGrabCursor","unsetGrabCursor","speed","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","destroyed","updates","getSlideClasses","view","exact","swiperSize","size","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i1","i2","slideInView","i3","slideInView1","translated","setBreakpoint","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","setTranslate","autoHeight","updateAutoHeight","virtual","slideTo","watchOverflow","translateValue","rtlTranslate","newTranslate","newDirection","needUpdate","currentDirection","emitContainerClasses","width","height","rtl","dir","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","mount","addClasses","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","e","preload","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","newDefaults","m","installModule","prototypeGroup","protoMethod","use","$hoK65","$5NIfu","$1c280aeb2839a22d$export$2e2bcd8739ae039","$3bd3f193ccd5630c$var$isObject","$3bd3f193ccd5630c$export$8b58be045bf06082","src","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","getElementsByTagName","createElementNS","importNode","hash","host","hostname","href","origin","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","screen","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","$hKHmD","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","e1","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","$1338f5f0d60fe216$export$3735103072e4a80","getWindow","currentStyle","$1338f5f0d60fe216$export$5ec402b7fcf74398","matrix","curTransform","transformMatrix","axis","curStyle","WebKitCSSMatrix","transform","webkitTransform","a","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","$1338f5f0d60fe216$var$isNode","node","HTMLElement","nodeType","$1338f5f0d60fe216$export$8b58be045bf06082","nextSource","keysArray","noExtend","nextIndex","nextKey","desc","getOwnPropertyDescriptor","to","_loop","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","param","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","_classList","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$var$calcDevice","platform","ua","ios","android","screenWidth","screenHeight","ipad","ipod","iphone","windows","macos","iPadScreens","os","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","$f7ea505fdac53fb2$var$browser","$1t1Wn","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","ua1","String","includes","num","Number","major","minor","isWebView","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","param1","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","handler","priority","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","eventsArray","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","updateSlidesOffset","$hIP6N","updateSlidesProgress","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","updateClickedSlide","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","clientHeight","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","key1","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesSize1","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","backFaceHiddenClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","index1","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","isVisible","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","$0f7fe5860e74601f$export$2e2bcd8739ae039","activeSlide","getFilteredSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","emitSlidesClasses","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","realIndex1","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slidesPerViewDynamic","slideIndexLastInView","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","getTranslate","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","_obj","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","transitionStart","$488q8","transitionEnd","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","slideToLoop","$cGTS6","$7Y909","slidePrev","$3B7dt","slideReset","$dhKLJ","slideToClosest","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","indexAsNumber","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","prevSnapIndex","normalizedSnapGrid","prevSnap","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","nextSnap","currentSnap1","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","_slideTo","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","prepend","recalcSlides","currentSlideTranslate","newSlideTranslate","currentSlideTranslate1","newSlideTranslate1","diff1","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","pow","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","loopFixed","isLoop","evt","bubbles","dispatchEvent","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","currentPos","touchEndTime","timeDiff","pathTree","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","increment1","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","prevEl","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","getBreakpoint","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","base","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","_i","point1","value1","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","_classNames","prefix","resultClasses","suffixes","autoheight","centered","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","requireUpdateOnVirtual","overwriteParams","perspective","recreateShadows","getEffectParams","overwriteParamsResult","_s","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","allSlides","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer","register","JSON","parse"],"version":3,"file":"index.fc488e53.js.map"}