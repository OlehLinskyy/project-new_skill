{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/header/header.js","node_modules/@parcel/runtime-js/lib/runtime-44e7bd74d9a8b620.js","node_modules/lodash.debounce/index.js","src/js/loader/loader.js","src/js/support-ukraine/support-ukraine.js","src/js/support-ukraine/funds-array.js","node_modules/@parcel/runtime-js/lib/runtime-249c4c32ec8296b8.js","node_modules/@parcel/runtime-js/lib/runtime-91202a307d9d30e5.js","node_modules/@parcel/runtime-js/lib/runtime-48267b77bcd6c305.js","node_modules/@parcel/runtime-js/lib/runtime-f9bda8c276ff9ddc.js","node_modules/@parcel/runtime-js/lib/runtime-26965ebf4901867d.js","node_modules/@parcel/runtime-js/lib/runtime-72bc3d74b7d8806b.js","node_modules/@parcel/runtime-js/lib/runtime-932b1e12ef336667.js","node_modules/@parcel/runtime-js/lib/runtime-309c60b29fad25f7.js","node_modules/@parcel/runtime-js/lib/runtime-cc07b9ff8927fb77.js","node_modules/@parcel/runtime-js/lib/runtime-d1cbc7e72b85bc88.js","node_modules/@parcel/runtime-js/lib/runtime-55d8dcad40a12511.js","node_modules/@parcel/runtime-js/lib/runtime-75b6e2203ad6bfc8.js","node_modules/@parcel/runtime-js/lib/runtime-01fb7bbc77e03bbd.js","node_modules/@parcel/runtime-js/lib/runtime-7d635791629971e4.js","node_modules/@parcel/runtime-js/lib/runtime-38d5acfb7e96cbef.js","node_modules/@parcel/runtime-js/lib/runtime-7c05e7641c30c38e.js","node_modules/@parcel/runtime-js/lib/runtime-e184cc0eb29cc6b2.js","node_modules/@parcel/runtime-js/lib/runtime-523aad1064a15419.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","node_modules/@parcel/runtime-js/lib/runtime-01e95b7a9d47712d.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import openCloseIcon from '../../images/icons.svg';\nimport styles from '../../sass/utils/_variables.scss';\nimport debounce from 'lodash.debounce';\n\n//   Перемикач світла/темна тема\nconst body = document.body;\n\nconst header = document.querySelector('.header');\nconst isDarkModeStored = localStorage.getItem('darkMode') === 'true';\nlet slider = document.querySelector('.switch');\n\nconst switchModeElStyles = {\n  body: {\n    lightMode: {\n      bgColor: '#f6f6f6',\n      mainTextColor: '#111111',\n    },\n    darkMode: {\n      bgColor: '#202024',\n      mainTextColor: '#fff',\n    },\n  },\n\n  header: {\n    lightMode: {\n      bgColor: '#fff',\n      mainTextColor: '#111111',\n      borderColor: '#111111',\n    },\n    darkMode: {\n      bgColor: '#111111',\n      mainTextColor: '#fff',\n      borderColor: '#fff',\n    },\n  },\n};\n\nslider.addEventListener('change', changeDarkMode);\n\nif (isDarkModeStored) {\n  slider.checked = true;\n  setDarkModeBodyStyle();\n  setDarkModeHeaderStyle();\n\n  // body.classList.add('dark');\n  // header.classList.add('dark');\n}\n\nfunction changeDarkMode() {\n  const darkModeId = 'darkMode';\n\n  if (slider.checked) {\n    // body.classList.add('dark');\n    // header.classList.add('dark');\n\n    localStorage.setItem(darkModeId, 'true');\n    setDarkModeBodyStyle();\n    setDarkModeHeaderStyle();\n    document.querySelector('.icon-href').setAttribute('fill', 'white');\n  } else {\n    // body.classList.remove('dark');\n    // header.classList.remove('dark');\n\n    localStorage.setItem(darkModeId, 'false');\n    setLightModeBodyStyle();\n    setLightModeHeaderStyle();\n    document.querySelector('.icon-href').setAttribute('fill', 'black');\n  }\n}\n\nfunction setLightModeBodyStyle() {\n  // if (slider.checked) {\n  //     body.style.backgroundColor = bgColor;\n  //     body.style.color = mainTextColor;\n  // } else {\n  //     body.style.backgroundColor = bgColor;\n  //     body.style.color = mainTextColor;\n  // };\n\n  const { bgColor, mainTextColor } = switchModeElStyles.body.lightMode;\n\n  body.style.backgroundColor = bgColor;\n  body.style.color = mainTextColor;\n}\n\nfunction setDarkModeBodyStyle() {\n  const { bgColor, mainTextColor } = switchModeElStyles.body.darkMode;\n\n  body.style.backgroundColor = bgColor;\n  body.style.color = mainTextColor;\n}\n\nfunction setLightModeHeaderStyle() {\n  const { bgColor, mainTextColor, borderColor } =\n    switchModeElStyles.header.lightMode;\n\n  header.style.backgroundColor = bgColor;\n  header.style.color = mainTextColor;\n  header.style.borderColor = borderColor;\n}\n\nfunction setDarkModeHeaderStyle() {\n  const { bgColor, mainTextColor, borderColor } =\n    switchModeElStyles.header.darkMode;\n\n  header.style.backgroundColor = bgColor;\n  header.style.color = mainTextColor;\n  header.style.borderColor = borderColor;\n}\n\n//   Відкриття/Закриття модалки для моб.версії\n\nconst modalBoxEl = document.querySelector('.data-modal');\nconst openModalBtnEl = document.querySelector('.js-open-menu');\nconst iconHrefEl = document.querySelector('.icon-href');\n\nopenModalBtnEl.addEventListener('click', toggleModal);\n\nif (isDarkModeStored) {\n  iconHrefEl.setAttribute('fill', 'white');\n} else {\n  iconHrefEl.setAttribute('fill', 'black');\n}\n\nfunction toggleModal() {\n  if (modalBoxEl.classList.contains('is-hidden')) {\n    modalBoxEl.classList.remove('is-hidden');\n    iconHrefEl.setAttribute('href', `${openCloseIcon}#icon-cross`);\n    document.body.classList.add('modal-open');\n    // iconHrefEl.setAttribute('width', '20px');\n    // iconHrefEl.setAttribute('height', '20px');\n    return;\n  } else {\n    modalBoxEl.classList.add('is-hidden');\n    iconHrefEl.setAttribute('href', `${openCloseIcon}#icon-menu`);\n    document.body.classList.remove('modal-open');\n  }\n}\n\n// Виділення жовтим назву поточної сторінки (меню в хедері)\n\nconst menuHomeEl = document.querySelector('.menu__home');\nconst menuShoppingEl = document.querySelector('.menu__shopping');\n\nconst setCurrentPage = () => {\n  const currentPageName = window.location.pathname;\n  // console.log(currentPageName);\n  // console.log(menuHomeEl);\n  // console.log(menuShoppingEl);\n\n  if (\n    currentPageName === '/index.html' ||\n    currentPageName === '/project-new_skill/index.html' ||\n    currentPageName === '/project-new_skill/'\n  ) {\n    menuHomeEl.classList.add('current-page');\n    menuShoppingEl.classList.remove('current-page');\n    return;\n  }\n\n  menuShoppingEl.classList.add('current-page');\n  menuHomeEl.classList.remove('current-page');\n};\n\nsetCurrentPage();\n\n// Виділення жовтим назву поточної сторінки (меню в модалці)\n\nconst dropMenuHomeEl = document.querySelector('.drop-menu__home');\nconst dropMenuShoppingEl = document.querySelector('.drop-menu__shopping');\n\nconst dropSetCurrentPage = () => {\n  const dropCurrentPageName = window.location.pathname;\n\n  if (\n    dropCurrentPageName === '/index.html' ||\n    dropCurrentPageName === '/project-new_skill/index.html'\n  ) {\n    dropMenuHomeEl.classList.add('current-page');\n    return;\n  }\n  dropMenuShoppingEl.classList.add('current-page');\n};\n\ndropSetCurrentPage();\n\n// Обрізання назви Shopping list при певній довжині екрану\n\n// const mediaQuery = window.matchMedia('(min-width: 577px) and (max-width: 640px)'); // визначаємо порогове значення\n// const menuShoppingRef = document.getElementById('menu__shopping-list');\n// const DEBOUNCE_DELAY = 400;\n\n// function handleMediaChange(event) {\n//     if (event.matches) {\n//         menuShoppingRef.textContent = 'Shopping...'; // змінюємо текстовий вміст елементу\n//     } else {\n//         menuShoppingRef.textContent = '';\n//         menuShoppingRef.insertAdjacentHTML('beforeend', `Shopping list\n//             <svg class=\"icon-cart\" width=\"13.33\" height=\"16.67\">\n//                 <use href=\"/src/images/icons.svg#icon-email\"></use>\n//             </svg>\n//         `); // змінюємо текстовий вміст елементу назад\n//         // menuShoppingRef.setAttribute();\n//     }\n// }\n\n// // function setShortNameShopList() {\n// //     menuShoppingRef.textContent = 'Shopping...';\n// // }\n\n// mediaQuery.addEventListener('change', debounce(handleMediaChange, DEBOUNCE_DELAY)); // додаємо слухача на подію зміни медіа-запиту\n\n// // викликаємо функцію handleMediaChange при завантаженні сторінки, щоб встановити початковий текстовий вміст елементу\n// handleMediaChange(mediaQuery);\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8OQ7p\")).toString();","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","const [loaderOverlay] = document.getElementsByClassName('loader__overlay');\n\nconst removeLoader = () => {\n  setTimeout(() => {\n    loaderOverlay.classList.remove('on-loader');\n  }, 250);\n};\n\nconst addLoader = () => {\n  loaderOverlay.classList.add('on-loader');\n};\n\nexport { addLoader, removeLoader };\n","import { fundArray } from './funds-array';\nimport Swiper from 'swiper';\n\nconst supportListEl = document.querySelector('.support__list');\nconst btnSwiperEl = document.querySelector('.swiper-button-next');\n\nconst renderSupportList = items => {\n  const listItems = items\n    .map((item, index) => {\n      const { title, url, img, img2 } = item;\n      const number = (index + 1).toString().padStart(2, '0');\n      return `\n           <li class=\"support__list-item swiper-slide\">\n              <p class=\"support__number\">${number}</p>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer nofollow\"\n                aria-label=\"company icon\"\n                class=\"support__link\"\n                href=\"${url}\"\n              >\n                <img\n                  src=\"${img}\"\n                  alt=\"${title}\"\n                  class=\"support__logo\"\n                  srcset=\"${img} 1x, ${img2} 2x\" \n                  width=\"149\"\n                  loading=\"lazy\"\n                />\n              </a>\n            </li>\n              `;\n    })\n    .join('');\n  supportListEl.innerHTML = `${listItems}`;\n};\n\nrenderSupportList(fundArray);\n\nconst swiper = new Swiper('.swiper', {\n  direction: 'vertical',\n  spaceBetween: 20,\n  slidesPerView: 'auto',\n  rewind: true,\n\n  navigation: {\n    nextEl: '.swiper-button-next',\n  },\n\n  plugins: {\n    scrollContainer: true,\n  },\n});\n\nswiper.update();\n\nbtnSwiperEl.addEventListener('click', () => {\n  swiper.slideNext();\n});\n\n// const imgSlides = document.querySelectorAll('.support__list-item');\n// const sliderBtn = document.querySelector('.support__btn');\n\n// let counter = 0;\n// let moveDown = false;\n\n// const verticalSlider = function () {\n//   imgSlides.forEach(function (slide) {\n//     slide.style.transform = `translateY(-${counter * 100}%)`;\n//   });\n// };\n\n// sliderBtn.addEventListener('click', function () {\n//   if (moveDown) {\n//     counter -= 3;\n//     if (counter < 0) {\n//       counter = 0;\n//       moveDown = false;\n//       sliderBtn.querySelector('.support__btn-icon').style.transform = '';\n//     }\n//   } else {\n//     counter += 3;\n//     if (counter >= imgSlides.length) {\n//       counter = imgSlides.length - 1;\n//       moveDown = true;\n//       sliderBtn.querySelector('.support__btn-icon').style.transform =\n//         'rotate(180deg)';\n//     }\n//   }\n//   verticalSlider(renderSupportList);\n// });\n","export const fundArray = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: require('../../images/png/support-ukraine/save-the-children.png'),\n    img2: require('../../images/png/support-ukraine/save-the-children@2x.png'),\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: require('../../images/png/support-ukraine/project-hope.png'),\n    img2: require('../../images/png/support-ukraine/project-hope@2x.png'),\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: require('../../images/png/support-ukraine/united24.png'),\n    img2: require('../../images/png/support-ukraine/united24@2x.png'),\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: require('../../images/png/support-ukraine/international-medical-corps.png'),\n    img2: require('../../images/png/support-ukraine/international-medical-corps@2x.png'),\n  },\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: require('../../images/png/support-ukraine/medecins-sans-frontieres.png'),\n    img2: require('../../images/png/support-ukraine/medecins-sans-frontieres@2x.png'),\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: require('../../images/png/support-ukraine/razom.png'),\n    img2: require('../../images/png/support-ukraine/razom@2x.png'),\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: require('../../images/png/support-ukraine/action-against-hunger.png'),\n    img2: require('../../images/png/support-ukraine/action-against-hunger@2x.png'),\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: require('../../images/png/support-ukraine/world-vision.png'),\n    img2: require('../../images/png/support-ukraine/world-vision@2x.png'),\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: require('../../images/png/support-ukraine/charity-foundation.png'),\n    img2: require('../../images/png/support-ukraine/charity-foundation@2x.png'),\n  },\n];\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"27G0e\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kinZx\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bIRqv\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gQXiN\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bSzbS\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gRCGB\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6U7Nc\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6DzLj\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3upBF\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"g0sdK\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"5TckD\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jBqVw\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3SSZo\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jYoAZ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kB6Ee\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3c2vT\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"l5HDN\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"10xiN\")).toString();","/**\n * Swiper 9.2.4\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 21, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slidesEl.prepend(swiper.slides[index]);\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slidesEl.append(swiper.slides[index]);\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n    if (swiper.isElement) {\n      liveRegion.setAttribute('slot', 'container-end');\n    }\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"gtQ5X\\\":\\\"index.62179529.js\\\",\\\"8OQ7p\\\":\\\"icons.73473773.svg\\\",\\\"27G0e\\\":\\\"save-the-children.164cf59f.png\\\",\\\"kinZx\\\":\\\"save-the-children@2x.86c690d0.png\\\",\\\"bIRqv\\\":\\\"project-hope.ac2f4725.png\\\",\\\"gQXiN\\\":\\\"project-hope@2x.b2c00627.png\\\",\\\"bSzbS\\\":\\\"united24.eb8f4e7c.png\\\",\\\"gRCGB\\\":\\\"united24@2x.47d4c2fe.png\\\",\\\"6U7Nc\\\":\\\"international-medical-corps.f83b1230.png\\\",\\\"6DzLj\\\":\\\"international-medical-corps@2x.02af5df3.png\\\",\\\"3upBF\\\":\\\"medecins-sans-frontieres.ce9fd46e.png\\\",\\\"g0sdK\\\":\\\"medecins-sans-frontieres@2x.4f98ff4c.png\\\",\\\"5TckD\\\":\\\"razom.9be8270a.png\\\",\\\"jBqVw\\\":\\\"razom@2x.4fb2684d.png\\\",\\\"3SSZo\\\":\\\"action-against-hunger.21fd0d2d.png\\\",\\\"jYoAZ\\\":\\\"action-against-hunger@2x.dbc51f1e.png\\\",\\\"kB6Ee\\\":\\\"world-vision.aa02aa90.png\\\",\\\"3c2vT\\\":\\\"world-vision@2x.5feca8e5.png\\\",\\\"l5HDN\\\":\\\"charity-foundation.ffd42f47.png\\\",\\\"10xiN\\\":\\\"charity-foundation@2x.76ebf1ae.png\\\",\\\"5UbS1\\\":\\\"index.5d7353e5.css\\\"}\"));"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$jrD5E","parcelRequire","$5beae1408dee8e31$var$body","document","body","$5beae1408dee8e31$var$header","querySelector","$5beae1408dee8e31$var$isDarkModeStored","localStorage","getItem","$5beae1408dee8e31$var$slider","$5beae1408dee8e31$var$switchModeElStyles","lightMode","bgColor","mainTextColor","darkMode","borderColor","$5beae1408dee8e31$var$setDarkModeBodyStyle","style","backgroundColor","color","$5beae1408dee8e31$var$setDarkModeHeaderStyle","addEventListener","darkModeId","checked","setItem","setAttribute","$5beae1408dee8e31$var$setLightModeBodyStyle","$5beae1408dee8e31$var$setLightModeHeaderStyle","$5beae1408dee8e31$var$modalBoxEl","$5beae1408dee8e31$var$openModalBtnEl","$5beae1408dee8e31$var$iconHrefEl","classList","contains","remove","$parcel$interopDefault","add","$5beae1408dee8e31$var$menuHomeEl","$5beae1408dee8e31$var$menuShoppingEl","currentPageName","window","location","pathname","$5beae1408dee8e31$var$setCurrentPage","$5beae1408dee8e31$var$dropMenuHomeEl","$5beae1408dee8e31$var$dropMenuShoppingEl","dropCurrentPageName","$5beae1408dee8e31$var$dropSetCurrentPage","module","exports","URL","resolve","import","meta","url","toString","$3a60d30aee96367f$var$reTrim","$3a60d30aee96367f$var$reIsBadHex","$3a60d30aee96367f$var$reIsBinary","$3a60d30aee96367f$var$reIsOctal","$3a60d30aee96367f$var$freeParseInt","parseInt","$3a60d30aee96367f$var$freeGlobal","$parcel$global","$3a60d30aee96367f$var$freeSelf","self","$3a60d30aee96367f$var$root","Function","$3a60d30aee96367f$var$objectToString","prototype","$3a60d30aee96367f$var$nativeMax","Math","max","$3a60d30aee96367f$var$nativeMin","min","$3a60d30aee96367f$var$now","Date","now","$3a60d30aee96367f$var$isObject","value","type","$3a60d30aee96367f$var$toNumber","$3a60d30aee96367f$var$isObjectLike","call","$3a60d30aee96367f$var$isSymbol","other","valueOf","replace","isBinary","test","slice","func","wait","options","lastArgs","lastThis","maxWait","result1","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","result","remainingWait","debounced","isInvoking","arguments","this","cancel","clearTimeout","flush","$dd12a6cabb8aa6ff$var$loaderOverlay","getElementsByClassName","$dd12a6cabb8aa6ff$export$5303cf8b8f096deb","$dd12a6cabb8aa6ff$export$4d81fd392b0a6f3e","$gQZVa","$3e98312efa57e6ac$var$supportListEl","$3e98312efa57e6ac$var$btnSwiperEl","items","listItems","map","item","index","title","img","img2","padStart","join","innerHTML","$3e98312efa57e6ac$var$renderSupportList","fundArray","$3e98312efa57e6ac$var$swiper","$iaGrY","default","direction","spaceBetween","slidesPerView","rewind","navigation","nextEl","plugins","scrollContainer","update","slideNext","$c45188e2ea51b0bc$export$447284bd0b7b482a","$7xxPi","$d3aa16e5c5539775$var$prototypes","$mPJF1","$jEOyI","$4HaqR","$b4Co2","$jtnqo","$7Q6KL","$lt8Bz","$i1StC","$6Vw97","$5rbog","$5IPB6","$d3aa16e5c5539775$var$extendedDefaults","$d3aa16e5c5539775$var$Swiper","getSlideIndex","slideEl","slidesEl","params","slides","$dNWnP","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndexByData","filter","getAttribute","recalcSlides","enable","swiper","enabled","grabCursor","setGrabCursor","emit","disable","unsetGrabCursor","setProgress","progress","speed","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","emitContainerClasses","_emitClasses","el","cls","className","split","indexOf","containerModifierClass","getSlideClasses","destroyed","emitSlidesClasses","updates","forEach","classNames","push","slidesPerViewDynamic","view","exact","slidesGrid","slidesSizesGrid","size","swiperSize","activeIndex","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i1","i2","snapGrid","setTranslate","translateValue","rtlTranslate","translate","newTranslate","translated","breakpoints","setBreakpoint","querySelectorAll","imageEl","complete","$fa3Xa","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","autoHeight","updateAutoHeight","isEnd","virtual","slideTo","watchOverflow","checkOverflow","changeDirection","newDirection","needUpdate","currentDirection","width","height","changeLanguageDirection","rtl","dir","mount","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","getWrapper","createElements","createElement","append","assign","toLowerCase","elementStyle","wrongRTL","init","initialized","addClasses","loop","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","e","target","preload","destroy","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","eventsListeners","eventName","off","deleteProps","static","newDefaults","extend","extendedDefaults","defaults","$1AMhv","mod","__modules__","modules","Array","isArray","m","installModule","constructor","getDocument","swipers","containerEl","newParams","__swiper__","support","$1gHsq","getSupport","device","$agupX","getDevice","userAgent","browser","$kMnIR","getBrowser","eventsAnyListeners","allModulesParams","extendParams","$kmZuC","on","bind","once","swiperParams","originalParams","passedParams","onAny","isHorizontal","isVertical","realIndex","isBeginning","previousTranslate","velocity","animating","cssOverflowAdjustment","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","prototypeGroup","protoMethod","use","$kdpim","$c4Sz9","$d3aa16e5c5539775$export$2e2bcd8739ae039","$57d5daab652ed4f7$var$isObject","obj","$57d5daab652ed4f7$export$8b58be045bf06082","src","key","$57d5daab652ed4f7$export$3fdcb9b4d81368d8","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","getElementsByTagName","createElementNS","importNode","hash","host","hostname","href","origin","protocol","search","$57d5daab652ed4f7$export$f65ca476c09acec0","doc","$57d5daab652ed4f7$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","screen","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$57d5daab652ed4f7$export$38b2d434cce3ea22","win","$a0cd23a932383e06$export$8694e5c03a4df8e6","object","e1","$a0cd23a932383e06$export$bdd553fddd433dcb","delay","$a0cd23a932383e06$export$461939dd4422153","$a0cd23a932383e06$export$5ec402b7fcf74398","axis","getWindow","matrix","curTransform","transformMatrix","curStyle","currentStyle","$a0cd23a932383e06$export$3735103072e4a80","WebKitCSSMatrix","transform","webkitTransform","a","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$a0cd23a932383e06$export$a6cdc56e425d0d0a","o","$a0cd23a932383e06$export$8b58be045bf06082","to","noExtend","nextSource","node","HTMLElement","nodeType","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","$a0cd23a932383e06$export$a607267f322101fd","varName","varValue","setProperty","$a0cd23a932383e06$export$a5dd2b4b1a116d6d","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$a0cd23a932383e06$export$616841b86f802685","$a0cd23a932383e06$export$eb846d859f2895e6","selector","matches","$a0cd23a932383e06$export$c8a8987d4410bf2d","tag","classes","$a0cd23a932383e06$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$a0cd23a932383e06$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$a0cd23a932383e06$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$a0cd23a932383e06$export$4184470d4bd0f986","prop","$a0cd23a932383e06$export$371885c503a01623","child","previousSibling","$a0cd23a932383e06$export$aedc7b608ca8e855","parents","parent","parentElement","$a0cd23a932383e06$export$6b974c5889da0bb5","fireCallBack","$a0cd23a932383e06$export$863f37913038cf77","includeMargins","offsetWidth","$0ec8fed4d94b7d0e$var$support","$0ec8fed4d94b7d0e$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$0ec8fed4d94b7d0e$var$calcSupport","$7792fe51e58fd98a$var$deviceCached","$7792fe51e58fd98a$export$30c823bc834d6ab4","overrides","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","os","$7792fe51e58fd98a$var$calcDevice","$f20ab12260e3c8aa$var$browser","$f20ab12260e3c8aa$export$89e15fc796a4a429","needPerspectiveFix","isSafari","String","includes","major","minor","num","Number","isWebView","$f20ab12260e3c8aa$var$calcBrowser","$eb78a4a6fe62148c$export$2e2bcd8739ae039","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$8cb02f6e7ce8fb4d$export$2e2bcd8739ae039","observers","attach","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$044a2fc60b096a26$export$2e2bcd8739ae039","events","handler","priority","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","$2nlfG","$e4f8f8ad9cb19e91$export$2e2bcd8739ae039","$aafDk","$jMtU7","$kPOBn","$8OSjY","$hBtS3","$29hok","$lCVGa","$3EEt9","$1bae36ef23f50f9c$export$2e2bcd8739ae039","clientWidth","clientHeight","isNaN","$7666f706306747b4$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","$e669b25e9df72d3e$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","visibleSlides","offsetHeight","$f2afd2868f8e8bc2$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$66bd21459a070ee6$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","$cd0d10153bc4aa64$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","updateSlidesProgress","$1909e99c7f96a783$export$2e2bcd8739ae039","getFilteredSlide","activeSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","$fbe9e371bf7fd468$export$2e2bcd8739ae039","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$fbe9e371bf7fd468$export$81ecffcda7ad6ebb","skip","realIndex1","$b09adb3584f4f5c0$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$b09adb3584f4f5c0$var$unlazy","$b09adb3584f4f5c0$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slideIndexLastInView","$2a947fda846258ea$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1umi3","$36b34534f351ba31$export$2e2bcd8739ae039","$1vvVW","$jVKXc","$a9I2T","$fzQVA","$1159e22d2ec30d20$export$2e2bcd8739ae039","virtualTranslate","getTranslate","$119175075d742233$export$2e2bcd8739ae039","byController","x","y","newProgress","$03be93aa6759504c$export$2e2bcd8739ae039","$764ce935999ac3a7$export$2e2bcd8739ae039","$b5732e441af1da9c$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","behavior","onTranslateToWrapperTransitionEnd","$e2mnO","$80fdd84039bf9f36$export$2e2bcd8739ae039","$C1QMZ","$3QxHx","$a3829d6301edc915$export$2e2bcd8739ae039","transitionDuration","$g81jD","$0724fc2edc847bc2$export$2e2bcd8739ae039","step","$bbde69f506a53967$export$2e2bcd8739ae039","$2cd05ec7ceec4531$export$2e2bcd8739ae039","$VoUIG","$e2d2e56ba51214aa$export$2e2bcd8739ae039","$hma03","$cNUv0","$73yc0","$30lE7","$6K2nc","$k6ufv","$0ac8a65aa579cc54$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","transitionStart","transitionEnd","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$ca2c3f7f2b80cb2e$export$2e2bcd8739ae039","newIndex","$9525e32ea72263e1$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$523356300376327b$export$2e2bcd8739ae039","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","$230229aaaf399bb3$export$2e2bcd8739ae039","$4e88e13af59bc0c1$export$2e2bcd8739ae039","threshold","currentSnap","$ea2bd50b7bab181f$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$jAQHU","$5b52a0cd14268ef0$export$2e2bcd8739ae039","$iefk9","$8TQCt","$e43a43ab7da51df1$export$2e2bcd8739ae039","slideRealIndex","$d4556bd6c5a7f2d0$export$2e2bcd8739ae039","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","prepend","currentSlideTranslate","slideToLoop","controller","control","loopParams","c","$67ac46f20fbdf8d4$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$8kBkW","$fa12fb2ee5c28987$export$2e2bcd8739ae039","$lGUvJ","$610d2748ae2a3d7a$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$fca95b10f60c741c$export$2e2bcd8739ae039","$d20293ed7c4414e4$var$dummyEventAttached","$d20293ed7c4414e4$var$dummyEventListener","$d20293ed7c4414e4$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$i41Or","onLoad","$d20293ed7c4414e4$export$2e2bcd8739ae039","$iDuHK","$hwZYB","$7UVOE","$lI65j","$9A257","$7V4dh","$d913afca7372dc81$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","$d913afca7372dc81$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$cc35800f8eced6b5$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","evt","bubbles","dispatchEvent","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","$5c3a9c649f4b5f25$export$2e2bcd8739ae039","touchEndTime","timeDiff","pathTree","updateClickedSlide","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","prevEl","$d26a01a5d69e1b50$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$6f991739d9bf88be$export$2e2bcd8739ae039","stopImmediatePropagation","$fce26d50c7e61a92$export$2e2bcd8739ae039","$5c411feff72a52ef$export$2e2bcd8739ae039","$6iUdR","$50b100814b3eeec4$export$2e2bcd8739ae039","$kp9jL","$4970091fac3b5d77$var$isGridEnabled","$4970091fac3b5d77$export$2e2bcd8739ae039","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","directionChanged","needsReLoop","isEnabled","$edad5ec5e4a0f3c0$export$2e2bcd8739ae039","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","$lHwXw","$42a915ff7a2ae30b$export$2e2bcd8739ae039","$e5Gui","$fcc72e1d6455c726$export$2e2bcd8739ae039","suffixes","prefix","resultClasses","$fcc72e1d6455c726$var$prepareClasses","autoheight","centered","$a4227d791ec395d4$export$2e2bcd8739ae039","$3f584f40558f8bb9$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$128e9ae4dc5cc7e1$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$ed458fea3043c525$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$a38c14293bf6942a$export$2e2bcd8739ae039","checkProps","$a59367f5a43a662f$export$2e2bcd8739ae039","$b3f342b4a3f8a5f2$export$2e2bcd8739ae039","appendElement","tempDOM","$0b71822481728c98$export$2e2bcd8739ae039","prependElement","$5e5e77ec41ddd74a$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$5dc678a0b70a1ea8$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$9fd743be1d735d66$export$2e2bcd8739ae039","removeSlide","$fe3c58194e0402ae$export$2e2bcd8739ae039","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","_s","slideShadows","$fac719e250553c76$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$42fdb4152f52aa22$export$2e2bcd8739ae039","transformElements","allSlides","transitionEndTarget","eventTriggered","parentNode","getSlide","elementTransitionEnd","$3a65e8106b617bf7$export$2e2bcd8739ae039","shadowClass","shadowContainer","register","JSON","parse"],"version":3,"file":"index.62179529.js.map"}